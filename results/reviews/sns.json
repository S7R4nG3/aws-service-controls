{
  "service": "AWS Simple Notification Service (SNS)",
  "security": [
    {
      "name": "CSA Cloud Controls Matrix",
      "version": "v4.0.10",
      "controls": [
        {
          "identifier": "IAM-01", 
          "title": "Identity and Access Management Policy and Procedures",
          "severity": "Critical",
          "description": "Establish, document, approve, communicate, apply, evaluate and maintain policies and procedures for Identity and Access Management. Review and update policies and procedures annually.",
          "implementation": {
            "type": "IaC",
            "description": "Implement IAM policies using CloudFormation or Terraform to define least-privilege access to SNS topics and subscriptions with documented policy review procedures"
          }
        },
        {
          "identifier": "IAM-02",
          "title": "User Access Provisioning",
          "severity": "High", 
          "description": "Provision user access based on need to know and least privilege principles with documented approval workflows",
          "implementation": {
            "type": "Platform",
            "description": "Use AWS IAM to create roles and policies that grant minimal necessary permissions for SNS operations with documented approval processes"
          }
        },
        {
          "identifier": "EKM-01",
          "title": "Encryption and Key Management Policy and Procedures",
          "severity": "Critical",
          "description": "Establish, document, approve, communicate, apply, evaluate and maintain policies and procedures for Encryption and Key Management",
          "implementation": {
            "type": "IaC", 
            "description": "Configure AWS KMS keys for SNS topic encryption and implement key rotation policies with documented key management procedures"
          }
        },
        {
          "identifier": "DSI-01",
          "title": "Data Security and Information Lifecycle Management Policy and Procedures", 
          "severity": "High",
          "description": "Establish, document, approve, communicate, apply, evaluate and maintain policies and procedures for Data Security and Information Lifecycle Management",
          "implementation": {
            "type": "User",
            "description": "Classify message content and implement appropriate retention policies and data handling procedures with documented data lifecycle management"
          }
        }
      ]
    },
    {
      "name": "NIST 800-53",
      "version": "Rev 5",
      "controls": [
        {
          "identifier": "AC-3",
          "title": "Access Enforcement", 
          "severity": "Critical",
          "description": "Enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies",
          "implementation": {
            "type": "IaC",
            "description": "Implement resource-based policies and IAM policies to enforce access controls on SNS topics and subscriptions"
          }
        },
        {
          "identifier": "SC-8",
          "title": "Transmission Confidentiality and Integrity",
          "severity": "Critical", 
          "description": "Protect the confidentiality and integrity of transmitted information",
          "implementation": {
            "type": "Platform",
            "description": "Enable HTTPS endpoints for SNS subscriptions and use TLS encryption for message delivery"
          }
        },
        {
          "identifier": "AU-2",
          "title": "Event Logging",
          "severity": "High",
          "description": "Identify the types of events that the system is capable of logging in support of the audit function",
          "implementation": {
            "type": "IaC",
            "description": "Configure CloudTrail to log SNS API calls and enable SNS message delivery status logging"
          }
        },
        {
          "identifier": "SC-28",
          "title": "Protection of Information at Rest",
          "severity": "High",
          "description": "Protect the confidentiality and integrity of information at rest",
          "implementation": {
            "type": "IaC",
            "description": "Enable server-side encryption for SNS topics using AWS KMS customer-managed keys"
          }
        },
        {
          "identifier": "CP-9",
          "title": "System Backup",
          "severity": "Medium",
          "description": "Conduct backups of user-level information contained in the system",
          "implementation": {
            "type": "IaC",
            "description": "Implement Infrastructure as Code to maintain SNS topic and subscription configurations as versioned backups"
          }
        }
      ]
    },
    {
      "name": "AWS Foundational Security Standard",
      "version": "v1.0.0",
      "controls": [
        {
          "identifier": "SNS.1",
          "title": "SNS topics should be encrypted at-rest using AWS KMS",
          "severity": "Medium",
          "description": "This control checks whether an Amazon SNS topic is encrypted at rest using AWS KMS",
          "implementation": {
            "type": "IaC",
            "description": "Configure KmsMasterKeyId parameter when creating SNS topics to enable encryption at rest"
          }
        },
        {
          "identifier": "SNS.2", 
          "title": "Delivery status logging should be enabled for notification messages sent to a topic",
          "severity": "Medium",
          "description": "This control checks whether logging is enabled for the delivery status of notification messages sent to an Amazon SNS topic for the endpoints",
          "implementation": {
            "type": "IaC",
            "description": "Configure delivery status logging attributes for SNS topics to track message delivery to various endpoints"
          }
        }
      ]
    },
    {
      "name": "AWS Security Hub",
      "version": "Current",
      "controls": [
        {
          "identifier": "SNS.1",
          "title": "SNS topics should be encrypted at-rest using AWS KMS",
          "severity": "Medium",
          "description": "This control checks whether an Amazon SNS topic is encrypted at rest using AWS KMS",
          "implementation": {
            "type": "IaC",
            "description": "Apply KMS encryption to SNS topics using customer-managed keys with appropriate key policies"
          }
        },
        {
          "identifier": "SNS.2",
          "title": "Delivery status logging should be enabled for notification messages sent to a topic", 
          "severity": "Medium",
          "description": "This control checks whether logging is enabled for the delivery status of notification messages sent to an Amazon SNS topic for the endpoints",
          "implementation": {
            "type": "IaC",
            "description": "Configure SNS topic attributes to enable delivery status logging for HTTP/HTTPS, Lambda, SQS, and other endpoints"
          }
        }
      ]
    }
  ],
  "operational": [],
  "cost": [
    {
      "name": "AWS SNS Cost Optimization Best Practices",
      "version": "Current", 
      "controls": [
        {
          "identifier": "COST-01",
          "title": "Optimize Message Batching",
          "severity": "High",
          "description": "Use message batching where possible to reduce the number of API calls and associated costs",
          "implementation": {
            "type": "User",
            "description": "Implement batch publishing using PublishBatch API to send up to 10 messages in a single request"
          }
        },
        {
          "identifier": "COST-02", 
          "title": "Right-size Message Payloads",
          "severity": "High",
          "description": "Optimize message size to avoid unnecessary charges for oversized messages",
          "implementation": {
            "type": "User",
            "description": "Keep message payloads under 256KB and use message attributes efficiently to minimize billing increments"
          }
        },
        {
          "identifier": "COST-03",
          "title": "Implement Dead Letter Queues", 
          "severity": "Medium",
          "description": "Use dead letter queues to avoid repeated delivery attempts and associated costs",
          "implementation": {
            "type": "IaC",
            "description": "Configure dead letter queues for SNS subscriptions to prevent costly retry cycles"
          }
        },
        {
          "identifier": "COST-04",
          "title": "Monitor and Optimize Cross-Region Data Transfer",
          "severity": "Medium",
          "description": "Minimize cross-region data transfer costs by optimizing SNS topic and subscription placement",
          "implementation": {
            "type": "IaC", 
            "description": "Deploy SNS topics in the same region as subscribers to avoid cross-region data transfer charges"
          }
        },
        {
          "identifier": "COST-05",
          "title": "Use Message Filtering",
          "severity": "Medium",
          "description": "Implement message filtering to reduce unnecessary message deliveries and associated costs",
          "implementation": {
            "type": "IaC",
            "description": "Configure subscription filter policies to deliver only relevant messages to subscribers"
          }
        },
        {
          "identifier": "COST-06",
          "title": "Optimize SMS and Email Delivery",
          "severity": "Low",
          "description": "Optimize SMS and email delivery patterns to minimize premium messaging costs",
          "implementation": {
            "type": "User",
            "description": "Use appropriate message prioritization and avoid sending SMS to premium numbers unnecessarily"
          }
        },
        {
          "identifier": "COST-07",
          "title": "Implement Cost Monitoring and Alerting",
          "severity": "Low",
          "description": "Set up cost monitoring and alerting for SNS usage to prevent unexpected charges",
          "implementation": {
            "type": "Platform",
            "description": "Configure AWS Cost Explorer and CloudWatch billing alarms to monitor SNS costs and usage patterns"
          }
        }
      ]
    }
  ]
}

## Key Changes Made:

1. **CSA Cloud Controls Matrix**: Updated version from v5.0 to v4.0.10 (current version) and corrected control titles to match official framework naming conventions

2. **AWS Foundational Security Standard**: 
   - Removed CloudTrail.1 and IAM.1 controls as these are not SNS-specific controls in this standard
   - Corrected SNS.1 and SNS.2 severity from Critical/High to Medium to match actual AWS standards
   - Updated titles to match exact AWS wording

3. **AWS Security Hub**:
   - Removed Config.1 and CloudWatch.1 controls as these are general controls, not SNS-specific
   - Corrected severity levels for SNS.1 and SNS.2 to Medium
   - Updated descriptions to match actual AWS Security Hub control descriptions

4. **General corrections**:
   - Standardized control titles and descriptions to match official framework documentation
   - Maintained implementation details that were appropriate and accurate