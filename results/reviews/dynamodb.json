{
  "service": "AWS DynamoDB",
  "security": [
    {
      "name": "CSA Cloud Controls Matrix",
      "version": "v4.0",
      "controls": [
        {
          "identifier": "IAM-01",
          "title": "Identity and Access Management Policy and Procedures",
          "severity": "High",
          "description": "Establish and maintain formal identity and access management policies and procedures that address purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and compliance for DynamoDB resources.",
          "implementation": {
            "type": "Platform/IaC",
            "description": "Configure IAM policies, roles, and resource-based policies for DynamoDB tables. Implement least privilege access using IAM policy conditions and attribute-based access control. Establish formal IAM governance procedures and regular access reviews."
          }
        },
        {
          "identifier": "DSI-01",
          "title": "Data Security and Information Lifecycle Management",
          "severity": "High",
          "description": "Establish and maintain documented data security and information lifecycle management policies and procedures addressing data classification, handling, retention, and disposal for DynamoDB data assets.",
          "implementation": {
            "type": "IaC",
            "description": "Enable DynamoDB encryption at rest using AWS KMS customer-managed keys, configure encryption in transit using TLS, implement Point-in-Time Recovery and backup policies. Establish data classification schemes and lifecycle management procedures."
          }
        },
        {
          "identifier": "GRM-01",
          "title": "Governance and Risk Management",
          "severity": "Medium",
          "description": "Establish, document, approve, communicate, apply, evaluate and maintain policies and procedures for organizational governance and enterprise risk management framework for cloud services including DynamoDB.",
          "implementation": {
            "type": "Platform",
            "description": "Use AWS Config rules to monitor DynamoDB compliance, implement AWS Security Hub for centralized security findings, establish tagging strategies for governance, and implement regular risk assessments."
          }
        },
        {
          "identifier": "IVS-01",
          "title": "Interoperability and Portability",
          "severity": "Low",
          "description": "Establish policies and procedures to ensure secure interoperability and data portability requirements are addressed in cloud service implementations including DynamoDB integrations.",
          "implementation": {
            "type": "User/IaC",
            "description": "Implement VPC endpoints for DynamoDB, configure API Gateway with proper authentication for DynamoDB access, use secure SDK configurations, and establish data export/import procedures for portability."
          }
        }
      ]
    },
    {
      "name": "NIST SP 800-53",
      "version": "Rev 5",
      "controls": [
        {
          "identifier": "AC-3",
          "title": "Access Enforcement",
          "severity": "Critical",
          "description": "Enforce approved authorizations for logical access to DynamoDB resources in accordance with applicable access control policies.",
          "implementation": {
            "type": "IaC",
            "description": "Configure IAM policies with explicit deny statements, implement resource-based policies, use condition keys for fine-grained access control, enable DynamoDB resource-level permissions."
          }
        },
        {
          "identifier": "SC-8",
          "title": "Transmission Confidentiality and Integrity",
          "severity": "Critical",
          "description": "Protect the confidentiality and integrity of transmitted information between clients and DynamoDB service.",
          "implementation": {
            "type": "User/IaC",
            "description": "Configure DynamoDB client SDKs to use HTTPS/TLS encryption, implement VPC endpoints to keep traffic within AWS network, validate SSL certificates in applications."
          }
        },
        {
          "identifier": "SC-28",
          "title": "Protection of Information at Rest",
          "severity": "Critical",
          "description": "Protect the confidentiality and integrity of information at rest in DynamoDB tables and backups.",
          "implementation": {
            "type": "IaC",
            "description": "Enable DynamoDB encryption at rest using AWS managed or customer-managed KMS keys, encrypt DynamoDB backups, implement proper key management policies."
          }
        },
        {
          "identifier": "AU-2",
          "title": "Event Logging",
          "severity": "High",
          "description": "Identify the types of events to be logged for DynamoDB operations and maintain audit logs.",
          "implementation": {
            "type": "Platform/IaC",
            "description": "Enable AWS CloudTrail for DynamoDB API logging, configure DynamoDB Streams for data-level events, implement CloudWatch logging for application-level events."
          }
        },
        {
          "identifier": "SI-4",
          "title": "System Monitoring",
          "severity": "High",
          "description": "Monitor DynamoDB for attacks and indicators of potential attacks in accordance with monitoring objectives.",
          "implementation": {
            "type": "Platform/IaC",
            "description": "Configure CloudWatch metrics and alarms for DynamoDB performance and security events, implement GuardDuty for threat detection, use AWS Security Hub for centralized monitoring."
          }
        },
        {
          "identifier": "CP-9",
          "title": "System Backup",
          "severity": "High",
          "description": "Conduct backups of DynamoDB data and system-level information contained in the system.",
          "implementation": {
            "type": "IaC",
            "description": "Enable DynamoDB Point-in-Time Recovery, configure automated backups, implement cross-region backup replication, establish backup retention policies."
          }
        },
        {
          "identifier": "RA-5",
          "title": "Vulnerability Monitoring and Scanning",
          "severity": "Medium",
          "description": "Monitor and scan for vulnerabilities in DynamoDB configurations and access patterns.",
          "implementation": {
            "type": "Platform",
            "description": "Use AWS Config rules for DynamoDB security configuration compliance, implement AWS Security Hub findings review, conduct regular access reviews and policy audits."
          }
        }
      ]
    },
    {
      "name": "AWS Foundational Security Standard",
      "version": "1.0",
      "controls": [
        {
          "identifier": "DynamoDB.1",
          "title": "DynamoDB tables should automatically scale capacity with demand",
          "severity": "Medium",
          "description": "DynamoDB tables should use on-demand billing mode or have auto scaling enabled to prevent throttling and potential denial of service.",
          "implementation": {
            "type": "IaC",
            "description": "Configure DynamoDB tables with on-demand billing mode or enable auto scaling for read and write capacity units with appropriate scaling policies."
          }
        },
        {
          "identifier": "DynamoDB.2",
          "title": "DynamoDB tables should have point-in-time recovery enabled",
          "severity": "High",
          "description": "Enable point-in-time recovery to protect against accidental writes or deletes to DynamoDB tables.",
          "implementation": {
            "type": "IaC",
            "description": "Enable Point-in-Time Recovery (PITR) on DynamoDB tables through CloudFormation, Terraform, or AWS CLI with appropriate retention settings."
          }
        },
        {
          "identifier": "DynamoDB.3",
          "title": "DynamoDB Accelerator (DAX) clusters should be encrypted at rest",
          "severity": "High",
          "description": "Enable encryption at rest for DynamoDB Accelerator clusters to protect cached data.",
          "implementation": {
            "type": "IaC",
            "description": "Configure DAX clusters with encryption at rest enabled using AWS managed or customer-managed KMS keys during cluster creation."
          }
        },
        {
          "identifier": "DynamoDB.4",
          "title": "DynamoDB tables should be encrypted at rest",
          "severity": "Critical",
          "description": "Ensure DynamoDB tables have encryption at rest enabled to protect sensitive data from unauthorized access.",
          "implementation": {
            "type": "IaC",
            "description": "Configure server-side encryption for DynamoDB tables using AWS managed keys or customer-managed KMS keys based on data sensitivity requirements."
          }
        }
      ]
    }
  ],
  "operational": [],
  "cost": [
    {
      "name": "AWS DynamoDB Cost Optimization Best Practices",
      "version": "2023",
      "controls": [
        {
          "identifier": "COST-1",
          "title": "Choose the Right Billing Mode",
          "severity": "High",
          "description": "Select between On-Demand and Provisioned billing modes based on traffic patterns to optimize costs.",
          "implementation": {
            "type": "IaC",
            "description": "Analyze traffic patterns and choose On-Demand for unpredictable workloads or Provisioned mode with auto-scaling for predictable workloads. Monitor and adjust based on CloudWatch metrics."
          }
        },
        {
          "identifier": "COST-2",
          "title": "Implement Table and Index Design Optimization",
          "severity": "High",
          "description": "Design efficient table structures and indexes to minimize read/write capacity requirements and storage costs.",
          "implementation": {
            "type": "User",
            "description": "Use single-table design patterns, optimize partition key distribution, minimize Global Secondary Index usage, and compress large attribute values. Regularly review access patterns."
          }
        },
        {
          "identifier": "COST-3",
          "title": "Enable Auto Scaling for Provisioned Tables",
          "severity": "Medium",
          "description": "Configure auto scaling to automatically adjust capacity based on actual usage patterns and avoid over-provisioning.",
          "implementation": {
            "type": "IaC",
            "description": "Enable DynamoDB auto scaling with appropriate target utilization percentages (70-80%), set minimum and maximum capacity limits, and configure scaling policies for tables and indexes."
          }
        },
        {
          "identifier": "COST-4",
          "title": "Optimize Data Storage and Lifecycle",
          "severity": "Medium",
          "description": "Implement data archiving strategies and use appropriate data types to minimize storage costs.",
          "implementation": {
            "type": "User/IaC",
            "description": "Use TTL (Time To Live) for automatic data expiration, archive old data to S3, compress large items, and use efficient data types. Implement data lifecycle policies."
          }
        },
        {
          "identifier": "COST-5",
          "title": "Monitor and Analyze Cost Usage",
          "severity": "Medium",
          "description": "Implement comprehensive cost monitoring and alerting to identify optimization opportunities.",
          "implementation": {
            "type": "Platform",
            "description": "Use AWS Cost Explorer, set up billing alerts, implement detailed tagging strategies, monitor DynamoDB Contributor Insights, and regularly review AWS Trusted Advisor recommendations."
          }
        },
        {
          "identifier": "COST-6",
          "title": "Use Reserved Capacity for Predictable Workloads",
          "severity": "Low",
          "description": "Purchase DynamoDB Reserved Capacity for stable, predictable workloads to achieve significant cost savings.",
          "implementation": {
            "type": "Platform",
            "description": "Analyze historical usage patterns and purchase one-year or three-year Reserved Capacity commitments for baseline capacity requirements. Monitor utilization to ensure optimal ROI."
          }
        },
        {
          "identifier": "COST-7",
          "title": "Optimize Global Tables and Cross-Region Replication",
          "severity": "Low",
          "description": "Carefully plan Global Tables deployment to minimize cross-region data transfer and replication costs.",
          "implementation": {
            "type": "IaC",
            "description": "Deploy Global Tables only in required regions, optimize data synchronization patterns, monitor cross-region transfer costs, and consider regional data locality requirements."
          }
        }
      ]
    }
  ]
}

## Key Changes Made:

### CSA Cloud Controls Matrix:
1. **Version corrected** from "v5.0" to "v4.0" (current version)
2. **Severity levels adjusted** to align with CCM standard severity classifications
3. **Control descriptions enhanced** to match CCM's focus on policy and procedure establishment
4. **IVS-01 severity reduced** from "Medium" to "Low" to reflect actual CCM classification

### AWS Foundational Security Standard:
1. **Framework name corrected** from "AWS Foundational Security Best Practices" to "AWS Foundational Security Standard"
2. **Consolidated controls** from AWS Security Hub into the Foundational Security Standard (as Security Hub references this standard)
3. **Added DynamoDB.4** control for encryption at rest
4. **Removed separate AWS Security Hub framework** since it duplicates Foundational Security Standard controls
5. **Fixed implementation description** for DynamoDB.4 (removed incorrect SSE-S3 reference)

### General Improvements:
1. **Enhanced control descriptions** to better align with actual framework language and intent
2. **Improved implementation details** to be more specific and actionable
3. **Maintained consistency** in severity levels across similar controls in different frameworks