{
    "service": "AWS Secrets Manager",
    "security": [
        {
            "name": "CSA CCM",
            "version": "v4.0.12",
            "controls": [
                {
                    "identifier": "IAM-02",
                    "title": "User Access Provisioning",
                    "severity": "Critical",
                    "description": "User access provisioning shall be authorized by defined personnel (e.g., supervisor and system administrator) according to a consistent process and approved by the data owner when data ownership has been assigned.",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement least privilege IAM policies using resource-based policies and condition keys for Secrets Manager access with defined approval workflows"
                    }
                },
                {
                    "identifier": "EKM-01",
                    "title": "Encryption and Key Management",
                    "severity": "High",
                    "description": "Encryption and key management procedures shall be implemented to protect data and cryptographic keys throughout their lifecycle.",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure AWS KMS customer-managed keys for secrets encryption with proper key lifecycle management and enable encryption in transit using TLS"
                    }
                },
                {
                    "identifier": "DSI-07",
                    "title": "Data Loss Prevention",
                    "severity": "High",
                    "description": "Data loss prevention (DLP) procedures shall be defined and implemented to detect and prevent unauthorized use, access, and transmission of data.",
                    "implementation": {
                        "type": "Platform",
                        "description": "Implement DLP controls using AWS CloudTrail for API monitoring, VPC endpoints for secure access, and resource-based policies to prevent unauthorized access"
                    }
                },
                {
                    "identifier": "IVS-06",
                    "title": "Network Controls",
                    "severity": "Medium",
                    "description": "Network security controls shall be implemented to protect against unauthorized network access.",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable VPC Flow Logs, configure VPC endpoints for private connectivity, and implement CloudTrail for API call monitoring"
                    }
                }
            ]
        },
        {
            "name": "NIST 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-2",
                    "title": "Account Management",
                    "severity": "Critical",
                    "description": "Manage information system accounts, including establishing, activating, modifying, reviewing, disabling, and removing accounts.",
                    "implementation": {
                        "type": "User",
                        "description": "Implement centralized account management using AWS IAM with regular access reviews and automated provisioning/deprovisioning for Secrets Manager access"
                    }
                },
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "Critical",
                    "description": "Enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies.",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure resource-based policies and IAM policies with explicit deny statements and condition keys for Secrets Manager access enforcement"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "High",
                    "description": "Protect the confidentiality and integrity of transmitted information.",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use HTTPS/TLS for all Secrets Manager API communications and implement VPC endpoints for private connectivity"
                    }
                },
                {
                    "identifier": "AU-3",
                    "title": "Content of Audit Records",
                    "severity": "High",
                    "description": "Ensure that audit records contain information that establishes the source, type, and other characteristics of events.",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable CloudTrail logging for Secrets Manager with detailed event information including source IP, user identity, timestamps, and secret ARNs"
                    }
                },
                {
                    "identifier": "CP-9",
                    "title": "System Backup",
                    "severity": "Medium",
                    "description": "Conduct backups of user-level information contained in the system.",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure cross-region secret replication and implement backup strategies using AWS Backup for Secrets Manager recovery"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Standard",
            "version": "v1.0.0",
            "controls": [
                {
                    "identifier": "SecretsManager.1",
                    "title": "Secrets Manager secrets should have automatic rotation enabled",
                    "severity": "Medium",
                    "description": "This control checks whether automatic rotation is enabled for secrets stored in AWS Secrets Manager.",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure automatic rotation using Lambda functions and specify rotation schedules in CloudFormation/Terraform templates"
                    }
                },
                {
                    "identifier": "SecretsManager.2",
                    "title": "Secrets Manager secrets configured with automatic rotation should rotate successfully",
                    "severity": "Medium",
                    "description": "This control checks whether automatic rotation is configured properly and completes successfully.",
                    "implementation": {
                        "type": "User",
                        "description": "Monitor rotation status through CloudWatch metrics and set up alerts for failed rotations using CloudWatch alarms"
                    }
                },
                {
                    "identifier": "SecretsManager.3",
                    "title": "Remove unused Secrets Manager secrets",
                    "severity": "Low",
                    "description": "This control checks whether your secrets have been accessed within a specified number of days.",
                    "implementation": {
                        "type": "User",
                        "description": "Implement regular auditing using AWS Config rules and CloudTrail analysis to identify and remove unused secrets"
                    }
                },
                {
                    "identifier": "SecretsManager.4",
                    "title": "Secrets Manager secrets should be rotated within a specified number of days",
                    "severity": "Medium",
                    "description": "This control checks whether your secrets have been rotated within the specified number of days.",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure rotation schedules within compliance timeframes and implement monitoring using AWS Config rules and CloudWatch alarms"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "2023.04.0",
            "controls": [
                {
                    "identifier": "SecretsManager.1",
                    "title": "Secrets Manager secrets should have automatic rotation enabled",
                    "severity": "Medium",
                    "description": "This control checks whether automatic rotation is enabled for secrets in AWS Secrets Manager.",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable automatic rotation in secret configuration with appropriate Lambda rotation functions defined in infrastructure code"
                    }
                },
                {
                    "identifier": "IAM.1",
                    "title": "IAM policies should not allow full '*' administrative privileges",
                    "severity": "High",
                    "description": "This control checks whether AWS IAM policies grant broad administrative privileges.",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create specific IAM policies for Secrets Manager with explicit resource ARNs and required actions only, avoiding wildcard permissions"
                    }
                },
                {
                    "identifier": "CloudTrail.1",
                    "title": "CloudTrail should be enabled and configured with at least one multi-Region trail",
                    "severity": "High",
                    "description": "This control checks whether AWS CloudTrail is enabled in the current region.",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure multi-region CloudTrail with S3 bucket logging and log file validation to capture Secrets Manager API calls"
                    }
                },
                {
                    "identifier": "KMS.1",
                    "title": "IAM customer managed policies should not allow decryption actions on all KMS keys",
                    "severity": "Medium",
                    "description": "This control checks whether AWS IAM customer managed policies allow decryption actions on all AWS KMS keys.",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement specific KMS key policies with resource-level permissions limited to Secrets Manager encryption keys only"
                    }
                },
                {
                    "identifier": "Config.1",
                    "title": "AWS Config should be enabled",
                    "severity": "Medium",
                    "description": "This control checks whether AWS Config is enabled in the account for the local region.",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable AWS Config with Secrets Manager resource recording and compliance rules for configuration monitoring"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS Secrets Manager Cost Optimization",
            "version": "2024",
            "controls": [
                {
                    "identifier": "COST-01",
                    "title": "Remove Unused Secrets",
                    "severity": "High",
                    "description": "Regularly identify and delete secrets that are no longer in use to avoid ongoing charges",
                    "implementation": {
                        "type": "User",
                        "description": "Implement automated discovery using CloudTrail logs to identify secrets not accessed within defined timeframes and schedule for deletion"
                    }
                },
                {
                    "identifier": "COST-02",
                    "title": "Optimize Rotation Frequency",
                    "severity": "High",
                    "description": "Balance security requirements with cost by optimizing rotation schedules",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure rotation schedules based on risk assessment rather than default frequencies, using longer intervals where security permits"
                    }
                },
                {
                    "identifier": "COST-03",
                    "title": "Consolidate Secrets",
                    "severity": "Medium",
                    "description": "Combine related secrets into single secret entries where security boundaries allow",
                    "implementation": {
                        "type": "User",
                        "description": "Review secret architecture to identify opportunities for consolidation, such as storing multiple database credentials in JSON format"
                    }
                },
                {
                    "identifier": "COST-04",
                    "title": "Monitor Secret Usage",
                    "severity": "Medium",
                    "description": "Implement monitoring to track secret usage patterns and identify cost optimization opportunities",
                    "implementation": {
                        "type": "Platform",
                        "description": "Set up CloudWatch dashboards and Cost Explorer analysis to track Secrets Manager spending and usage metrics"
                    }
                },
                {
                    "identifier": "COST-05",
                    "title": "Use Appropriate Replication Strategy",
                    "severity": "Medium",
                    "description": "Implement cross-region replication only where required for disaster recovery",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure replication based on RTO/RPO requirements and avoid unnecessary cross-region replication charges"
                    }
                },
                {
                    "identifier": "COST-06",
                    "title": "Implement Secret Lifecycle Management",
                    "severity": "Low",
                    "description": "Establish processes for secret lifecycle management to prevent secret sprawl",
                    "implementation": {
                        "type": "User",
                        "description": "Create governance processes with regular reviews, automated cleanup, and approval workflows for new secrets"
                    }
                }
            ]
        }
    ]
}

## Summary of Changes Made:

### CSA CCM v5.0 → v4.0.12
- Updated version to current release
- **IAM-02**: Corrected title from "User Access Management" to "User Access Provisioning" and updated description to match actual control
- **EKM-01**: Corrected description and moved encryption focus to implementation details
- **DSI-07**: Corrected title from "Encryption and Key Management" to "Data Loss Prevention" and updated description and implementation accordingly
- **IVS-06**: Corrected title from "Network Monitoring" to "Network Controls" and enhanced implementation details

### NIST 800-53 Rev 5
- Enhanced descriptions to better match the actual control language
- Updated implementations to be more specific to Secrets Manager context

### AWS Foundational Security Best Practices → AWS Foundational Security Standard
- Corrected framework name
- **SecretsManager.1**: Changed severity from "Critical" to "Medium" to match actual AWS severity rating
- **SecretsManager.2**: Changed severity from "High" to "Medium"
- **SecretsManager.3**: Changed severity from "Medium" to "Low"
- Updated descriptions to match actual control descriptions from AWS documentation

### AWS Security Hub
- Updated version to current release (2023.04.0)
- **SecretsManager.1**: Changed severity from "Critical" to "Medium"
- **IAM.1**: Changed severity from "Critical" to "High"
- **KMS.1**: Changed severity from "High" to "Medium"
- **Config.1**: Updated description and maintained "Medium" severity
- Updated all descriptions to match actual AWS Security Hub control descriptions

The key discrepancies were primarily around incorrect framework versions, control titles, severity ratings, and descriptions that didn't match the actual framework specifications. The implementations were generally appropriate but have been refined for better alignment with each framework's intent.