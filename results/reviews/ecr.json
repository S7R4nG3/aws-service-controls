{
    "service": "AWS Elastic Container Registry",
    "security": [
        {
            "name": "Cloud Security Alliance (CSA) Cloud Controls Matrix",
            "version": "v4.0",
            "controls": [
                {
                    "identifier": "IAM-01",
                    "title": "Entitlement",
                    "severity": "Critical",
                    "description": "Establish and maintain identity and access management policies for ECR resources",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Configure ECR repository policies, IAM roles and policies for ECR access using IaC templates with least privilege principles"
                    }
                },
                {
                    "identifier": "DSI-01",
                    "title": "Data Security and Information Lifecycle Management",
                    "severity": "Critical",
                    "description": "Implement data protection controls for container images and sensitive data",
                    "implementation": {
                        "type": "Platform + User",
                        "description": "Enable ECR image scanning, implement encryption at rest and in transit, establish image lifecycle policies"
                    }
                },
                {
                    "identifier": "EKM-01",
                    "title": "Encryption and Key Management",
                    "severity": "Critical",
                    "description": "Implement proper encryption and key management for ECR repositories",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Configure ECR repositories with KMS encryption using customer-managed keys, implement key rotation policies"
                    }
                },
                {
                    "identifier": "AIS-01",
                    "title": "Application and Interface Security",
                    "severity": "High",
                    "description": "Enable comprehensive logging and monitoring for ECR activities",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Enable CloudTrail logging for ECR API calls, configure VPC Flow Logs for ECR endpoints, set up CloudWatch monitoring"
                    }
                },
                {
                    "identifier": "TVM-01",
                    "title": "Threat and Vulnerability Management",
                    "severity": "High",
                    "description": "Implement vulnerability scanning and patch management for container images",
                    "implementation": {
                        "type": "Platform + User",
                        "description": "Enable ECR enhanced scanning, implement automated vulnerability remediation workflows, establish image promotion policies"
                    }
                },
                {
                    "identifier": "IPY-01",
                    "title": "Interoperability and Portability",
                    "severity": "High",
                    "description": "Implement network security controls for ECR access",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Configure VPC endpoints for ECR, implement security groups and NACLs, enable private repository access"
                    }
                }
            ]
        },
        {
            "name": "NIST 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "Critical",
                    "description": "Enforce approved authorizations for logical access to ECR resources",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Implement resource-based policies on ECR repositories, configure cross-account access controls, use IAM conditions for fine-grained access"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "Critical",
                    "description": "Protect the confidentiality and integrity of transmitted information",
                    "implementation": {
                        "type": "Platform",
                        "description": "Ensure HTTPS/TLS encryption for all ECR API communications, configure Docker clients for secure registry communication"
                    }
                },
                {
                    "identifier": "SC-28",
                    "title": "Protection of Information at Rest",
                    "severity": "Critical",
                    "description": "Protect the confidentiality and integrity of information at rest",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Enable ECR encryption at rest using AWS KMS, implement server-side encryption for all repositories"
                    }
                },
                {
                    "identifier": "AU-2",
                    "title": "Event Logging",
                    "severity": "High",
                    "description": "Ensure that auditable events are being logged",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Configure CloudTrail to log ECR API events, enable ECR repository access logging, implement log aggregation"
                    }
                },
                {
                    "identifier": "SI-3",
                    "title": "Malicious Code Protection",
                    "severity": "High",
                    "description": "Implement malicious code protection mechanisms",
                    "implementation": {
                        "type": "Platform + User",
                        "description": "Enable ECR image scanning for malware detection, implement admission controllers for Kubernetes clusters"
                    }
                },
                {
                    "identifier": "SI-4",
                    "title": "System Monitoring",
                    "severity": "High",
                    "description": "Monitor the system to detect attacks and indicators of potential attacks",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Configure CloudWatch metrics for ECR, set up GuardDuty for threat detection, implement automated alerting"
                    }
                },
                {
                    "identifier": "RA-5",
                    "title": "Vulnerability Monitoring and Scanning",
                    "severity": "Medium",
                    "description": "Monitor and scan for vulnerabilities and remediate them",
                    "implementation": {
                        "type": "Platform + User",
                        "description": "Enable ECR enhanced scanning with Inspector integration, implement vulnerability management workflows"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Standard",
            "version": "1.0.0",
            "controls": [
                {
                    "identifier": "ECR.1",
                    "title": "ECR private repositories should have image scanning configured",
                    "severity": "High",
                    "description": "ECR repositories should have image scanning enabled to identify software vulnerabilities",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Enable scan on push for ECR repositories, configure enhanced scanning for comprehensive vulnerability detection"
                    }
                },
                {
                    "identifier": "ECR.2",
                    "title": "ECR private repositories should have tag immutability configured",
                    "severity": "Medium",
                    "description": "ECR repositories should have tag immutability enabled to prevent image tags from being overwritten",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Configure imageTagMutability to IMMUTABLE in ECR repository configuration"
                    }
                },
                {
                    "identifier": "ECR.3",
                    "title": "ECR repositories should have at least one lifecycle policy configured",
                    "severity": "Medium",
                    "description": "ECR repositories should have lifecycle policies to manage image retention and reduce storage costs",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Implement lifecycle policies to automatically delete untagged images and old image versions"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS ECR Cost Optimization Best Practices",
            "version": "2023",
            "controls": [
                {
                    "identifier": "COST-01",
                    "title": "Implement Repository Lifecycle Policies",
                    "severity": "High",
                    "description": "Configure lifecycle policies to automatically delete unused and old container images to reduce storage costs",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Set up lifecycle rules to delete untagged images after 1 day and keep only the latest 10 tagged images per repository"
                    }
                },
                {
                    "identifier": "COST-02",
                    "title": "Optimize Image Size and Layers",
                    "severity": "High",
                    "description": "Minimize container image size and optimize layers to reduce storage and data transfer costs",
                    "implementation": {
                        "type": "User",
                        "description": "Use multi-stage builds, minimize base images, combine RUN commands, and remove unnecessary packages and files"
                    }
                },
                {
                    "identifier": "COST-03",
                    "title": "Monitor and Analyze Repository Usage",
                    "severity": "Medium",
                    "description": "Regularly monitor repository usage and costs to identify optimization opportunities",
                    "implementation": {
                        "type": "Platform + User",
                        "description": "Use CloudWatch metrics and AWS Cost Explorer to track ECR usage patterns and storage costs"
                    }
                },
                {
                    "identifier": "COST-04",
                    "title": "Use Regional Repositories",
                    "severity": "Medium",
                    "description": "Deploy ECR repositories in the same region as compute resources to minimize data transfer costs",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Create ECR repositories in regions where container workloads are deployed to avoid cross-region data transfer charges"
                    }
                },
                {
                    "identifier": "COST-05",
                    "title": "Implement Image Replication Strategy",
                    "severity": "Medium",
                    "description": "Use ECR replication rules strategically to balance availability and cost",
                    "implementation": {
                        "type": "Platform + IaC",
                        "description": "Configure selective replication rules based on image tags or repository filters rather than replicating all images"
                    }
                },
                {
                    "identifier": "COST-06",
                    "title": "Optimize Scanning Costs",
                    "severity": "Low",
                    "description": "Balance security scanning needs with cost by optimizing scanning frequency and scope",
                    "implementation": {
                        "type": "Platform + User",
                        "description": "Enable scan-on-push for production images only, use basic scanning for development repositories unless enhanced scanning is required"
                    }
                }
            ]
        }
    ]
}

## Summary of Changes Made:

### 1. Cloud Security Alliance (CSA) Cloud Controls Matrix
- **Version**: Changed from "v5.0" to "v4.0" (v5.0 is not yet released)
- **Control Identifiers and Titles**: Updated several control identifiers and titles to match actual CSA CCM v4.0:
  - IAM-01: Title changed to "Entitlement"
  - LOG-01: Changed to AIS-01 "Application and Interface Security" (more appropriate for API logging)
  - IVS-01: Changed to TVM-01 "Threat and Vulnerability Management"
  - NET-01: Changed to IPY-01 "Interoperability and Portability" (closest match for network security in ECR context)

### 2. AWS Foundational Security Standard
- **Framework Name**: Changed from "AWS Foundational Security Best Practices" to "AWS Foundational Security Standard" (correct official name)

### 3. AWS Security Hub
- **Removed Duplicate Framework**: The AWS Security Hub section was removed as it contains identical controls to the AWS Foundational Security Standard (ECR.1, ECR.2, ECR.3). AWS Security Hub uses the same standard controls, so having both sections was redundant.

The discrepancies were primarily:
1. Incorrect CSA CCM version (v5.0 doesn't exist yet)
2. Mismatched control identifiers in CSA CCM that don't correspond to actual framework controls
3. Duplicate framework entries (Security Hub vs Foundational Security Standard)
4. Incorrect official framework naming

All other controls, implementations, and descriptions were appropriate and aligned with the actual framework requirements.