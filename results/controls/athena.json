{
    "service": "AWS Athena",
    "security": [
        {
            "name": "NIST 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-2",
                    "title": "Account Management",
                    "severity": "High",
                    "description": "Manage information system accounts, including establishing, activating, modifying, reviewing, disabling, and removing accounts",
                    "implementation": {
                        "type": "Platform/IaC",
                        "description": "Implement IAM policies and roles with least privilege access to Athena resources, regularly review and audit user accounts"
                    }
                },
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "High",
                    "description": "Enforce approved authorizations for logical access to information and system resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure IAM policies to control access to specific databases, tables, and S3 locations used by Athena"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "High",
                    "description": "Protect the confidentiality and integrity of transmitted information",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable TLS encryption for all Athena API calls and query results in transit"
                    }
                },
                {
                    "identifier": "SC-28",
                    "title": "Protection of Information at Rest",
                    "severity": "High",
                    "description": "Protect the confidentiality and integrity of information at rest",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable S3 encryption for Athena query results and source data using KMS keys"
                    }
                },
                {
                    "identifier": "AU-2",
                    "title": "Audit Events",
                    "severity": "Medium",
                    "description": "Identify the types of events that the system is capable of logging in support of the audit function",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable CloudTrail logging for all Athena API calls and configure VPC Flow Logs if using VPC endpoints"
                    }
                },
                {
                    "identifier": "AU-12",
                    "title": "Audit Record Generation",
                    "severity": "Medium",
                    "description": "Provide audit record generation capability for defined auditable events",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure CloudWatch logging for Athena query execution and performance metrics"
                    }
                },
                {
                    "identifier": "SI-4",
                    "title": "System Monitoring",
                    "severity": "Medium",
                    "description": "Monitor the system to detect attacks and indicators of potential attacks",
                    "implementation": {
                        "type": "IaC",
                        "description": "Set up CloudWatch alarms for unusual query patterns, failed queries, and resource consumption"
                    }
                }
            ]
        },
        {
            "name": "CSA CCM",
            "version": "v4.0",
            "controls": [
                {
                    "identifier": "IAM-01",
                    "title": "Identity and Access Management Policy and Procedures",
                    "severity": "High",
                    "description": "Establish and maintain identity and access management policies and procedures",
                    "implementation": {
                        "type": "User/IaC",
                        "description": "Document and implement IAM policies for Athena access with role-based permissions and regular reviews"
                    }
                },
                {
                    "identifier": "IAM-02",
                    "title": "User Access Provisioning",
                    "severity": "High",
                    "description": "User access is provisioned, de-provisioned, and reviewed",
                    "implementation": {
                        "type": "User",
                        "description": "Implement automated provisioning and de-provisioning of Athena access through IAM roles and groups"
                    }
                },
                {
                    "identifier": "EKM-02",
                    "title": "Encryption Key Management",
                    "severity": "High",
                    "description": "Encryption keys are managed throughout their lifecycle",
                    "implementation": {
                        "type": "IaC",
                        "description": "Use AWS KMS for managing encryption keys for Athena query results and implement key rotation policies"
                    }
                },
                {
                    "identifier": "DSI-01",
                    "title": "Data Security and Information Lifecycle Management",
                    "severity": "Medium",
                    "description": "Data and objects are protected throughout their lifecycle",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement data classification and retention policies for Athena query results and underlying S3 data"
                    }
                },
                {
                    "identifier": "DSI-07",
                    "title": "Secure Disposal",
                    "severity": "Medium",
                    "description": "Secure disposal of data when no longer required",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure S3 lifecycle policies for Athena result buckets to automatically delete old query results"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Best Practices",
            "version": "1.0.0",
            "controls": [
                {
                    "identifier": "IAM.1",
                    "title": "IAM policies should not allow full administrative privileges",
                    "severity": "High",
                    "description": "This control checks whether IAM policies grant full administrative privileges",
                    "implementation": {
                        "type": "IaC",
                        "description": "Apply principle of least privilege for Athena IAM policies, avoiding wildcard permissions"
                    }
                },
                {
                    "identifier": "S3.1",
                    "title": "S3 Block Public Access setting should be enabled",
                    "severity": "High",
                    "description": "This control checks whether S3 Block Public Access settings are configured for S3 buckets used by Athena",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable S3 Block Public Access settings on buckets containing Athena data sources and results"
                    }
                },
                {
                    "identifier": "Athena.1",
                    "title": "Athena workgroups should encrypt query results",
                    "severity": "Medium",
                    "description": "This control checks whether an Amazon Athena workgroup encrypts query results",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure workgroup settings to enforce encryption of query results using S3 server-side encryption"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "Current",
            "controls": [
                {
                    "identifier": "CloudTrail.1",
                    "title": "CloudTrail should be enabled and configured with at least one multi-Region trail",
                    "severity": "High",
                    "description": "This control checks that there is at least one multi-region CloudTrail trail",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable multi-region CloudTrail to capture all Athena API calls across regions"
                    }
                },
                {
                    "identifier": "CloudWatch.1",
                    "title": "A log metric filter and alarm should exist for usage of root user",
                    "severity": "Medium",
                    "description": "This control checks whether a log metric filter and alarm exist for root user usage",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create CloudWatch alarms for root user access to Athena resources"
                    }
                },
                {
                    "identifier": "EC2.2",
                    "title": "VPC default security groups should not allow inbound or outbound traffic",
                    "severity": "Medium",
                    "description": "This control checks that the default security group restricts all traffic",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure restrictive security groups for VPC endpoints used with Athena"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS Athena Cost Optimization Best Practices",
            "version": "Current",
            "controls": [
                {
                    "identifier": "COST-01",
                    "title": "Optimize Data Storage Format",
                    "severity": "High",
                    "description": "Use columnar storage formats like Parquet or ORC to reduce data scanned and improve query performance",
                    "implementation": {
                        "type": "User",
                        "description": "Convert data to Parquet or ORC format and partition data appropriately to minimize data scanned per query"
                    }
                },
                {
                    "identifier": "COST-02",
                    "title": "Implement Data Partitioning",
                    "severity": "High",
                    "description": "Partition data by commonly queried fields to reduce the amount of data scanned",
                    "implementation": {
                        "type": "User",
                        "description": "Design partition schemes based on query patterns and use partition projection where applicable"
                    }
                },
                {
                    "identifier": "COST-03",
                    "title": "Use Data Compression",
                    "severity": "High",
                    "description": "Compress data to reduce storage costs and improve query performance",
                    "implementation": {
                        "type": "User",
                        "description": "Apply appropriate compression algorithms (GZIP, Snappy, LZO) based on data type and access patterns"
                    }
                },
                {
                    "identifier": "COST-04",
                    "title": "Configure Query Result Location Lifecycle",
                    "severity": "Medium",
                    "description": "Set up S3 lifecycle policies for query result locations to automatically delete old results",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure S3 lifecycle rules to transition old query results to cheaper storage classes or delete them"
                    }
                },
                {
                    "identifier": "COST-05",
                    "title": "Implement Workgroup Query Controls",
                    "severity": "Medium",
                    "description": "Use workgroups to set query limits and control resource usage",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure workgroups with data usage controls, query timeout limits, and result encryption requirements"
                    }
                },
                {
                    "identifier": "COST-07",
                    "title": "Monitor and Alert on Usage",
                    "severity": "Medium",
                    "description": "Set up monitoring and alerting for Athena usage and costs",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create CloudWatch alarms for data processed, query costs, and set up AWS Budgets for cost control"
                    }
                },
                {
                    "identifier": "COST-06",
                    "title": "Optimize Query Performance",
                    "severity": "Medium",
                    "description": "Write efficient queries to minimize data processing and reduce costs",
                    "implementation": {
                        "type": "User",
                        "description": "Use LIMIT clauses, specific column selection, predicate pushdown, and avoid SELECT * statements"
                    }
                },
                {
                    "identifier": "COST-08",
                    "title": "Use Approximation Functions",
                    "severity": "Low",
                    "description": "Use approximation functions for large datasets when exact results are not required",
                    "implementation": {
                        "type": "User",
                        "description": "Utilize functions like approx_distinct() and approx_percentile() for faster, cost-effective analytics"
                    }
                }
            ]
        }
    ]
}