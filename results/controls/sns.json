{
    "service": "AWS Simple Notification Service (SNS)",
    "security": [
        {
            "name": "CSA Cloud Controls Matrix",
            "version": "v5.0",
            "controls": [
                {
                    "identifier": "IAM-01",
                    "title": "Identity and Access Management Policy",
                    "severity": "Critical",
                    "description": "Establish and maintain identity and access management policies for SNS resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement IAM policies using CloudFormation or Terraform to define least-privilege access to SNS topics and subscriptions"
                    }
                },
                {
                    "identifier": "IAM-02",
                    "title": "User Access Provisioning",
                    "severity": "High",
                    "description": "Implement proper user provisioning and access controls for SNS resources",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use AWS IAM to create roles and policies that grant minimal necessary permissions for SNS operations"
                    }
                },
                {
                    "identifier": "EKM-01",
                    "title": "Encryption Key Management",
                    "severity": "Critical",
                    "description": "Implement proper encryption key management for SNS message encryption",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure AWS KMS keys for SNS topic encryption and implement key rotation policies"
                    }
                },
                {
                    "identifier": "DSI-01",
                    "title": "Data Security and Information Lifecycle Management",
                    "severity": "High",
                    "description": "Implement data classification and lifecycle management for SNS messages",
                    "implementation": {
                        "type": "User",
                        "description": "Classify message content and implement appropriate retention policies and data handling procedures"
                    }
                }
            ]
        },
        {
            "name": "NIST 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "Critical",
                    "description": "Enforce approved authorizations for logical access to SNS resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement resource-based policies and IAM policies to enforce access controls on SNS topics and subscriptions"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "Critical",
                    "description": "Protect the confidentiality and integrity of transmitted SNS messages",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable HTTPS endpoints for SNS subscriptions and use TLS encryption for message delivery"
                    }
                },
                {
                    "identifier": "AU-2",
                    "title": "Event Logging",
                    "severity": "High",
                    "description": "Identify events to be logged for SNS activities",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure CloudTrail to log SNS API calls and enable SNS message delivery status logging"
                    }
                },
                {
                    "identifier": "SC-28",
                    "title": "Protection of Information at Rest",
                    "severity": "High",
                    "description": "Protect information at rest in SNS message storage",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable server-side encryption for SNS topics using AWS KMS customer-managed keys"
                    }
                },
                {
                    "identifier": "CP-9",
                    "title": "System Backup",
                    "severity": "Medium",
                    "description": "Conduct backups of SNS configurations and subscriptions",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement Infrastructure as Code to maintain SNS topic and subscription configurations as versioned backups"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Standard",
            "version": "v1.0.0",
            "controls": [
                {
                    "identifier": "SNS.1",
                    "title": "SNS topics should be encrypted at rest using AWS KMS",
                    "severity": "Critical",
                    "description": "SNS topics should be encrypted at rest to protect sensitive message content",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure KmsMasterKeyId parameter when creating SNS topics to enable encryption at rest"
                    }
                },
                {
                    "identifier": "SNS.2",
                    "title": "Delivery status logging should be enabled for notification messages sent to a topic",
                    "severity": "High",
                    "description": "Enable delivery status logging to monitor message delivery success and failures",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure delivery status logging attributes for SNS topics to track message delivery to various endpoints"
                    }
                },
                {
                    "identifier": "CloudTrail.1",
                    "title": "CloudTrail should be enabled and configured with at least one multi-Region trail",
                    "severity": "High",
                    "description": "Enable CloudTrail logging for SNS API calls for audit and compliance purposes",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure CloudTrail to capture SNS API events across all regions where SNS is used"
                    }
                },
                {
                    "identifier": "IAM.1",
                    "title": "IAM policies should not allow full administrative privileges",
                    "severity": "Medium",
                    "description": "Implement least privilege access for SNS resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create specific IAM policies that grant only necessary SNS permissions rather than using wildcard permissions"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "Current",
            "controls": [
                {
                    "identifier": "SNS.1",
                    "title": "SNS topics should be encrypted at rest using AWS KMS",
                    "severity": "Critical",
                    "description": "Ensure SNS topics use KMS encryption for data protection at rest",
                    "implementation": {
                        "type": "IaC",
                        "description": "Apply KMS encryption to SNS topics using customer-managed keys with appropriate key policies"
                    }
                },
                {
                    "identifier": "SNS.2",
                    "title": "Delivery status logging should be enabled for notification messages sent to a topic",
                    "severity": "High",
                    "description": "Enable message delivery status logging for operational visibility",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure SNS topic attributes to enable delivery status logging for HTTP/HTTPS, Lambda, SQS, and other endpoints"
                    }
                },
                {
                    "identifier": "Config.1",
                    "title": "AWS Config should be enabled",
                    "severity": "High",
                    "description": "Enable AWS Config to monitor SNS resource configuration changes",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure AWS Config rules to monitor SNS topic configuration compliance and changes"
                    }
                },
                {
                    "identifier": "CloudWatch.1",
                    "title": "A log metric filter and alarm should exist for usage of root user",
                    "severity": "Medium",
                    "description": "Monitor root user access to SNS resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create CloudWatch alarms and metric filters to detect root user SNS API usage"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS SNS Cost Optimization Best Practices",
            "version": "Current",
            "controls": [
                {
                    "identifier": "COST-01",
                    "title": "Optimize Message Batching",
                    "severity": "High",
                    "description": "Use message batching where possible to reduce the number of API calls and associated costs",
                    "implementation": {
                        "type": "User",
                        "description": "Implement batch publishing using PublishBatch API to send up to 10 messages in a single request"
                    }
                },
                {
                    "identifier": "COST-02",
                    "title": "Right-size Message Payloads",
                    "severity": "High",
                    "description": "Optimize message size to avoid unnecessary charges for oversized messages",
                    "implementation": {
                        "type": "User",
                        "description": "Keep message payloads under 256KB and use message attributes efficiently to minimize billing increments"
                    }
                },
                {
                    "identifier": "COST-03",
                    "title": "Implement Dead Letter Queues",
                    "severity": "Medium",
                    "description": "Use dead letter queues to avoid repeated delivery attempts and associated costs",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure dead letter queues for SNS subscriptions to prevent costly retry cycles"
                    }
                },
                {
                    "identifier": "COST-04",
                    "title": "Monitor and Optimize Cross-Region Data Transfer",
                    "severity": "Medium",
                    "description": "Minimize cross-region data transfer costs by optimizing SNS topic and subscription placement",
                    "implementation": {
                        "type": "IaC",
                        "description": "Deploy SNS topics in the same region as subscribers to avoid cross-region data transfer charges"
                    }
                },
                {
                    "identifier": "COST-05",
                    "title": "Use Message Filtering",
                    "severity": "Medium",
                    "description": "Implement message filtering to reduce unnecessary message deliveries and associated costs",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure subscription filter policies to deliver only relevant messages to subscribers"
                    }
                },
                {
                    "identifier": "COST-06",
                    "title": "Optimize SMS and Email Delivery",
                    "severity": "Low",
                    "description": "Optimize SMS and email delivery patterns to minimize premium messaging costs",
                    "implementation": {
                        "type": "User",
                        "description": "Use appropriate message prioritization and avoid sending SMS to premium numbers unnecessarily"
                    }
                },
                {
                    "identifier": "COST-07",
                    "title": "Implement Cost Monitoring and Alerting",
                    "severity": "Low",
                    "description": "Set up cost monitoring and alerting for SNS usage to prevent unexpected charges",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure AWS Cost Explorer and CloudWatch billing alarms to monitor SNS costs and usage patterns"
                    }
                }
            ]
        }
    ]
}