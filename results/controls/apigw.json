{
    "service": "AWS API Gateway",
    "security": [
        {
            "name": "CSA Cloud Controls Matrix",
            "version": "v4.0",
            "controls": [
                {
                    "identifier": "IAM-01",
                    "title": "Entitlement",
                    "severity": "High",
                    "description": "Provision and manage user account entitlements to enterprise assets and resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure IAM policies, resource-based policies, and API Gateway authorizers (Lambda, Cognito, or IAM) to control access to APIs"
                    }
                },
                {
                    "identifier": "DSI-05",
                    "title": "Data Transmission",
                    "severity": "High",
                    "description": "Encrypt data in transit using strong cryptographic protocols and algorithms",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure custom domain names with SSL/TLS certificates and enforce HTTPS-only communication through API Gateway settings"
                    }
                },
                {
                    "identifier": "IVS-06",
                    "title": "Network Architecture",
                    "severity": "High",
                    "description": "Design and implement network security architecture",
                    "implementation": {
                        "type": "IaC",
                        "description": "Deploy private API Gateway endpoints within VPC, configure VPC endpoints, and implement WAF rules for protection"
                    }
                },
                {
                    "identifier": "STA-04",
                    "title": "Denial of Service Protection",
                    "severity": "Medium",
                    "description": "Implement protective measures against denial of service attacks",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure throttling limits, usage plans, and integrate with AWS WAF for advanced threat protection"
                    }
                },
                {
                    "identifier": "GRM-02",
                    "title": "Information System Regulatory Mapping",
                    "severity": "Medium",
                    "description": "Map applicable regulatory requirements to information systems and associated controls",
                    "implementation": {
                        "type": "User",
                        "description": "Implement API versioning strategies, deployment stages, and approval workflows for API changes"
                    }
                }
            ]
        },
        {
            "name": "NIST SP 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "High",
                    "description": "Enforce approved authorizations for logical access to information and system resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement API Gateway authorizers with fine-grained access control using IAM roles, Lambda authorizers, or Cognito User Pools"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "High",
                    "description": "Protect the confidentiality and integrity of transmitted information",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure TLS 1.2+ encryption, certificate management, and mutual TLS authentication for sensitive APIs"
                    }
                },
                {
                    "identifier": "AU-2",
                    "title": "Event Logging",
                    "severity": "High",
                    "description": "Identify the types of events that the system is capable of logging",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable CloudTrail logging, API Gateway execution logs, and access logs with comprehensive event capture"
                    }
                },
                {
                    "identifier": "SI-3",
                    "title": "Malicious Code Protection",
                    "severity": "Medium",
                    "description": "Implement malicious code protection mechanisms",
                    "implementation": {
                        "type": "IaC",
                        "description": "Deploy AWS WAF with API Gateway to filter malicious requests and implement request validation"
                    }
                },
                {
                    "identifier": "CP-2",
                    "title": "Contingency Plan",
                    "severity": "Medium",
                    "description": "Develop, document, and maintain a contingency plan for information systems",
                    "implementation": {
                        "type": "User",
                        "description": "Implement multi-region deployments, backup strategies, and disaster recovery procedures for API Gateway configurations"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Best Practices",
            "version": "v1.0.0",
            "controls": [
                {
                    "identifier": "APIGateway.2",
                    "title": "API Gateway REST API stages should be configured to use SSL certificates for backend authentication",
                    "severity": "High",
                    "description": "Configure SSL certificates for backend authentication to ensure secure communication",
                    "implementation": {
                        "type": "IaC",
                        "description": "Deploy SSL certificates via ACM and configure custom domain names with HTTPS endpoints"
                    }
                },
                {
                    "identifier": "APIGateway.1",
                    "title": "API Gateway REST API execution logging should be enabled",
                    "severity": "Medium",
                    "description": "Enable execution logging for REST APIs to capture detailed information about requests and responses",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure CloudWatch Logs integration with API Gateway stages to enable INFO or ERROR level execution logging"
                    }
                },
                {
                    "identifier": "APIGateway.4",
                    "title": "API Gateway should be associated with a WAF Web ACL",
                    "severity": "Medium",
                    "description": "Associate API Gateway with AWS WAF to protect against common web exploits",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create WAF web ACL with appropriate rules and associate it with API Gateway stages"
                    }
                },
                {
                    "identifier": "APIGateway.5",
                    "title": "API Gateway REST API cache data should be encrypted at rest",
                    "severity": "Medium",
                    "description": "Enable encryption for API Gateway caching to protect cached data at rest",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure cache encryption settings in API Gateway method responses and stage configurations"
                    }
                },
                {
                    "identifier": "APIGateway.3",
                    "title": "API Gateway REST API stages should have AWS X-Ray tracing enabled",
                    "severity": "Low",
                    "description": "Enable AWS X-Ray tracing to analyze and debug distributed API applications",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable X-Ray tracing at the API Gateway stage level and configure sampling rules"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "2023.04.0",
            "controls": [
                {
                    "identifier": "APIGateway.10",
                    "title": "API Gateway REST APIs should prohibit public read access",
                    "severity": "High",
                    "description": "Ensure REST APIs do not allow unrestricted public read access",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure proper authorization and resource policies to prevent anonymous public access to sensitive API operations"
                    }
                },
                {
                    "identifier": "APIGateway.11",
                    "title": "API Gateway REST APIs should prohibit public write access",
                    "severity": "High",
                    "description": "Ensure REST APIs do not allow unrestricted public write access",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement strong authorization controls for write operations including POST, PUT, DELETE methods"
                    }
                },
                {
                    "identifier": "APIGateway.8",
                    "title": "API Gateway routes should specify an authorization type",
                    "severity": "Medium",
                    "description": "Ensure all API Gateway routes have appropriate authorization configured",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure authorization type (IAM, Lambda, Cognito, or JWT) for all API Gateway routes and methods"
                    }
                },
                {
                    "identifier": "APIGateway.9",
                    "title": "Access logging should be configured for API Gateway V2 Stages",
                    "severity": "Medium",
                    "description": "Enable access logging for HTTP API and WebSocket API stages",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure access logging with CloudWatch Logs destination and appropriate log format for API Gateway v2 stages"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS API Gateway Cost Optimization Best Practices",
            "version": "2023",
            "controls": [
                {
                    "identifier": "COST-01",
                    "title": "Implement Caching Strategy",
                    "severity": "High",
                    "description": "Enable API Gateway caching to reduce backend calls and improve performance while reducing costs",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure method-level caching with appropriate TTL values and cache key parameters to minimize redundant backend requests"
                    }
                },
                {
                    "identifier": "COST-02",
                    "title": "Optimize API Gateway Type Selection",
                    "severity": "High",
                    "description": "Choose the appropriate API Gateway type (HTTP API vs REST API) based on feature requirements",
                    "implementation": {
                        "type": "User",
                        "description": "Use HTTP APIs for simple proxy integrations as they are up to 70% cheaper than REST APIs with lower latency"
                    }
                },
                {
                    "identifier": "COST-03",
                    "title": "Implement Usage Plans and API Keys",
                    "severity": "Medium",
                    "description": "Control API usage and prevent unexpected costs through usage plans and throttling",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure usage plans with quotas and throttling limits to control API consumption and associated backend costs"
                    }
                },
                {
                    "identifier": "COST-04",
                    "title": "Monitor and Optimize Request Routing",
                    "severity": "Medium",
                    "description": "Optimize request routing to minimize data transfer and processing costs",
                    "implementation": {
                        "type": "User",
                        "description": "Use regional endpoints instead of edge-optimized when clients are in the same region, and implement request/response transformations efficiently"
                    }
                },
                {
                    "identifier": "COST-05",
                    "title": "Implement Efficient Error Handling",
                    "severity": "Medium",
                    "description": "Optimize error handling to reduce unnecessary backend invocations and associated costs",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure gateway responses and request validation to catch errors early and avoid backend processing costs"
                    }
                },
                {
                    "identifier": "COST-06",
                    "title": "Regular Cost Monitoring and Analysis",
                    "severity": "Low",
                    "description": "Implement regular monitoring of API Gateway costs and usage patterns",
                    "implementation": {
                        "type": "Platform",
                        "description": "Set up CloudWatch dashboards and billing alerts to monitor API Gateway usage, costs, and identify optimization opportunities"
                    }
                }
            ]
        }
    ]
}