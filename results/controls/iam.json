{
    "service": "AWS Identity and Access Management (IAM)",
    "security": [
        {
            "name": "CSA Cloud Controls Matrix",
            "version": "v5.0",
            "controls": [
                {
                    "identifier": "IAM-01",
                    "title": "Identity and Access Management Policy",
                    "severity": "High",
                    "description": "Establish comprehensive identity and access management policies with role-based access controls",
                    "implementation": {
                        "type": "IaC",
                        "description": "Define IAM policies, roles, and groups using CloudFormation or Terraform templates with least privilege principles"
                    }
                },
                {
                    "identifier": "IAM-02",
                    "title": "Multi-Factor Authentication",
                    "severity": "High",
                    "description": "Enforce multi-factor authentication for all privileged accounts and sensitive operations",
                    "implementation": {
                        "type": "User",
                        "description": "Configure MFA devices for root and IAM users through AWS Console or CLI, enforce via IAM policies"
                    }
                },
                {
                    "identifier": "IAM-03",
                    "title": "Privileged Account Management",
                    "severity": "High",
                    "description": "Implement strict controls and monitoring for privileged administrative accounts",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use AWS Organizations SCPs and IAM Access Analyzer to monitor and restrict privileged access"
                    }
                },
                {
                    "identifier": "IAM-04",
                    "title": "Access Reviews and Certification",
                    "severity": "Medium",
                    "description": "Conduct regular access reviews and certifications to ensure appropriate permissions",
                    "implementation": {
                        "type": "Platform",
                        "description": "Implement automated access reviews using AWS Access Analyzer and IAM credential reports"
                    }
                },
                {
                    "identifier": "IAM-05",
                    "title": "Identity Federation",
                    "severity": "Medium",
                    "description": "Implement federated identity management for centralized authentication",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure SAML 2.0 or OIDC identity providers and IAM roles for federated access"
                    }
                }
            ]
        },
        {
            "name": "NIST SP 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-2",
                    "title": "Account Management",
                    "severity": "High",
                    "description": "Implement comprehensive account management procedures including creation, modification, and deletion",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use AWS Organizations and CloudTrail to track account lifecycle events and implement automated account provisioning"
                    }
                },
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "High",
                    "description": "Enforce approved authorizations for logical access to information and system resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement IAM policies with explicit deny statements and service control policies to enforce access boundaries"
                    }
                },
                {
                    "identifier": "AC-6",
                    "title": "Least Privilege",
                    "severity": "High",
                    "description": "Employ the principle of least privilege for specific security functions and privileged accounts",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create granular IAM policies with minimal required permissions and use IAM Access Analyzer for policy validation"
                    }
                },
                {
                    "identifier": "IA-2",
                    "title": "Identification and Authentication",
                    "severity": "High",
                    "description": "Uniquely identify and authenticate organizational users and associate with accounts",
                    "implementation": {
                        "type": "User",
                        "description": "Implement strong password policies and MFA requirements through IAM password policy and MFA enforcement"
                    }
                },
                {
                    "identifier": "AU-2",
                    "title": "Event Logging",
                    "severity": "Medium",
                    "description": "Identify the types of events that the system is capable of logging",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable CloudTrail logging for all IAM API calls and integrate with CloudWatch for monitoring"
                    }
                },
                {
                    "identifier": "SC-23",
                    "title": "Session Authenticity",
                    "severity": "Medium",
                    "description": "Protect the authenticity of communications sessions",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use AWS STS temporary credentials and implement session duration limits in IAM roles"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Best Practices Standard",
            "version": "1.0.0",
            "controls": [
                {
                    "identifier": "IAM.1",
                    "title": "IAM policies should not allow full '*' administrative privileges",
                    "severity": "High",
                    "description": "Avoid granting full administrative privileges using wildcard permissions",
                    "implementation": {
                        "type": "IaC",
                        "description": "Review and remediate IAM policies to remove wildcard permissions and implement specific resource-based permissions"
                    }
                },
                {
                    "identifier": "IAM.2",
                    "title": "IAM users should not have IAM policies attached",
                    "severity": "High",
                    "description": "Avoid attaching policies directly to IAM users, use groups or roles instead",
                    "implementation": {
                        "type": "IaC",
                        "description": "Migrate user-attached policies to IAM groups and implement role-based access patterns"
                    }
                },
                {
                    "identifier": "IAM.3",
                    "title": "IAM users' access keys should be rotated every 90 days or less",
                    "severity": "High",
                    "description": "Regularly rotate IAM user access keys to reduce security risks",
                    "implementation": {
                        "type": "User",
                        "description": "Implement automated access key rotation using AWS Secrets Manager or custom Lambda functions"
                    }
                },
                {
                    "identifier": "IAM.4",
                    "title": "IAM root access key should not exist",
                    "severity": "Critical",
                    "description": "Remove and do not create access keys for the root account",
                    "implementation": {
                        "type": "User",
                        "description": "Delete existing root access keys and implement IAM users with appropriate permissions for administrative tasks"
                    }
                },
                {
                    "identifier": "IAM.5",
                    "title": "MFA should be enabled for all IAM users that have a console password",
                    "severity": "High",
                    "description": "Enable multi-factor authentication for console access to enhance security",
                    "implementation": {
                        "type": "User",
                        "description": "Configure virtual or hardware MFA devices for all console users and enforce through IAM policies"
                    }
                },
                {
                    "identifier": "IAM.6",
                    "title": "Hardware MFA should be enabled for the root user",
                    "severity": "Critical",
                    "description": "Enable hardware-based MFA for the root account for maximum security",
                    "implementation": {
                        "type": "User",
                        "description": "Configure hardware MFA device for root account through AWS Console account settings"
                    }
                },
                {
                    "identifier": "IAM.7",
                    "title": "Password policies for IAM users should have strong configurations",
                    "severity": "Medium",
                    "description": "Implement strong password policies including length, complexity, and rotation requirements",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure IAM account password policy with minimum length, complexity requirements, and rotation policies"
                    }
                },
                {
                    "identifier": "IAM.8",
                    "title": "Unused IAM user credentials should be removed",
                    "severity": "Medium",
                    "description": "Identify and remove unused IAM user credentials to reduce attack surface",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use IAM credential reports and Access Analyzer to identify and remove unused credentials automatically"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "2023.04.04",
            "controls": [
                {
                    "identifier": "IAM.21",
                    "title": "IAM customer managed policies should not allow decryption actions on all KMS keys",
                    "severity": "High",
                    "description": "Restrict IAM policies from allowing broad KMS decryption permissions",
                    "implementation": {
                        "type": "IaC",
                        "description": "Review and update IAM policies to specify explicit KMS key ARNs instead of wildcard permissions for KMS actions"
                    }
                },
                {
                    "identifier": "IAM.22",
                    "title": "IAM user credentials unused for 45 days should be removed",
                    "severity": "Medium",
                    "description": "Remove IAM user credentials that have not been used for 45 days or more",
                    "implementation": {
                        "type": "Platform",
                        "description": "Implement automated credential cleanup using Lambda functions triggered by CloudWatch Events based on credential reports"
                    }
                },
                {
                    "identifier": "Account.1",
                    "title": "Security contact information should be provided for an AWS account",
                    "severity": "Medium",
                    "description": "Ensure security contact information is configured for incident response",
                    "implementation": {
                        "type": "User",
                        "description": "Configure security contact information in AWS account settings through the AWS Console"
                    }
                },
                {
                    "identifier": "Account.2",
                    "title": "AWS accounts should be part of an AWS Organizations organization",
                    "severity": "Medium",
                    "description": "Use AWS Organizations for centralized account management and governance",
                    "implementation": {
                        "type": "Platform",
                        "description": "Create or join an AWS Organizations structure and implement service control policies for governance"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS IAM Cost Optimization Best Practices",
            "version": "2023",
            "controls": [
                {
                    "identifier": "COST-IAM-01",
                    "title": "Eliminate Unused IAM Users and Roles",
                    "severity": "High",
                    "description": "Regularly identify and remove unused IAM users, roles, and policies to reduce management overhead",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use IAM Access Analyzer and credential reports to identify unused identities and implement automated cleanup processes"
                    }
                },
                {
                    "identifier": "COST-IAM-02",
                    "title": "Optimize Cross-Account Role Usage",
                    "severity": "Medium",
                    "description": "Use cross-account IAM roles instead of creating duplicate users across multiple accounts",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement cross-account trust relationships and assume role patterns to reduce user proliferation"
                    }
                },
                {
                    "identifier": "COST-IAM-03",
                    "title": "Leverage AWS SSO for User Management",
                    "severity": "Medium",
                    "description": "Use AWS IAM Identity Center (SSO) to reduce IAM user management overhead and costs",
                    "implementation": {
                        "type": "Platform",
                        "description": "Migrate from individual IAM users to AWS SSO for centralized identity management and reduced operational costs"
                    }
                },
                {
                    "identifier": "COST-IAM-04",
                    "title": "Implement Policy Consolidation",
                    "severity": "Medium",
                    "description": "Consolidate similar IAM policies to reduce management complexity and overhead",
                    "implementation": {
                        "type": "IaC",
                        "description": "Review and merge similar IAM policies using IAM Access Analyzer policy validation and optimization recommendations"
                    }
                },
                {
                    "identifier": "COST-IAM-05",
                    "title": "Use Service-Linked Roles",
                    "severity": "Low",
                    "description": "Utilize AWS service-linked roles instead of custom roles where possible to reduce management overhead",
                    "implementation": {
                        "type": "Platform",
                        "description": "Replace custom service roles with AWS-managed service-linked roles when supported by the service"
                    }
                },
                {
                    "identifier": "COST-IAM-06",
                    "title": "Implement Automated Access Reviews",
                    "severity": "Medium",
                    "description": "Automate access reviews to reduce manual effort and operational costs",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use AWS Config rules and Lambda functions to automate access certification and policy compliance checks"
                    }
                }
            ]
        }
    ]
}