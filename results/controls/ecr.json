{
    "service": "AWS Elastic Container Registry",
    "security": [
        {
            "name": "CSA CCM",
            "version": "v4.0",
            "controls": [
                {
                    "identifier": "IAM-02",
                    "title": "User Access Authorization",
                    "severity": "Critical",
                    "description": "Ensure proper authentication and authorization controls are implemented for ECR access",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure IAM policies and roles with least privilege access to ECR repositories, implement resource-based policies for repository access control"
                    }
                },
                {
                    "identifier": "DSI-01",
                    "title": "Data Classification",
                    "severity": "High",
                    "description": "Implement encryption for data at rest and in transit for container images",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable encryption at rest using AWS KMS keys and ensure HTTPS/TLS for data in transit through ECR API endpoints"
                    }
                },
                {
                    "identifier": "DSI-07",
                    "title": "Secure Disposal",
                    "severity": "High",
                    "description": "Implement secure deletion of container images and associated metadata",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure lifecycle policies to automatically delete unused images and implement secure deletion procedures for sensitive container images"
                    }
                },
                {
                    "identifier": "IVS-06",
                    "title": "Network Architecture",
                    "severity": "Medium",
                    "description": "Ensure proper network security controls for ECR access",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure VPC endpoints for ECR access and implement network access controls"
                    }
                }
            ]
        },
        {
            "name": "NIST 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-2",
                    "title": "Account Management",
                    "severity": "Critical",
                    "description": "Manage ECR user accounts and access permissions systematically",
                    "implementation": {
                        "type": "Platform",
                        "description": "Implement automated account provisioning and deprovisioning for ECR access using IAM roles and policies"
                    }
                },
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "Critical",
                    "description": "Enforce approved authorizations for logical access to ECR repositories",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure repository policies and IAM policies to enforce least privilege access to specific ECR repositories and actions"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "High",
                    "description": "Protect the confidentiality and integrity of transmitted container images",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use HTTPS/TLS for all ECR API communications and Docker client interactions with ECR endpoints"
                    }
                },
                {
                    "identifier": "SC-28",
                    "title": "Protection of Information at Rest",
                    "severity": "High",
                    "description": "Protect confidentiality and integrity of container images stored in ECR",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable server-side encryption using AWS KMS customer-managed keys for ECR repositories"
                    }
                },
                {
                    "identifier": "AU-2",
                    "title": "Event Logging",
                    "severity": "High",
                    "description": "Ensure ECR activities are logged for security monitoring",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable CloudTrail logging for ECR API calls and configure CloudWatch for ECR events monitoring"
                    }
                },
                {
                    "identifier": "SI-7",
                    "title": "Software, Firmware, and Information Integrity",
                    "severity": "Medium",
                    "description": "Verify integrity of container images stored in ECR",
                    "implementation": {
                        "type": "User",
                        "description": "Implement image signing and verification using Docker Content Trust or similar mechanisms"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Best Practices",
            "version": "1.0.0",
            "controls": [
                {
                    "identifier": "ECR.1",
                    "title": "ECR private repositories should have image scanning configured",
                    "severity": "High",
                    "description": "Enable vulnerability scanning for container images in ECR repositories",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure scan on push for ECR repositories and implement automated scanning policies"
                    }
                },
                {
                    "identifier": "ECR.2",
                    "title": "ECR private repositories should have tag immutability configured",
                    "severity": "Medium",
                    "description": "Enable tag immutability to prevent image tags from being overwritten",
                    "implementation": {
                        "type": "IaC",
                        "description": "Set imageTagMutability to IMMUTABLE when creating ECR repositories"
                    }
                },
                {
                    "identifier": "ECR.3",
                    "title": "ECR repositories should have at least one lifecycle policy configured",
                    "severity": "Medium",
                    "description": "Implement lifecycle policies to manage image retention and reduce storage costs",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure lifecycle policies to automatically clean up old or unused container images based on age or count"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "2024",
            "controls": [
                {
                    "identifier": "ECR.1",
                    "title": "ECR repositories should have image scanning configured",
                    "severity": "High",
                    "description": "Automatically scan container images for vulnerabilities",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable enhanced scanning with Inspector or basic scanning for ECR repositories"
                    }
                },
                {
                    "identifier": "ECR.2", 
                    "title": "ECR repositories should have tag immutability enabled",
                    "severity": "Medium",
                    "description": "Prevent accidental overwriting of container image tags",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure tag immutability setting to IMMUTABLE for production ECR repositories"
                    }
                },
                {
                    "identifier": "ECR.3",
                    "title": "ECR repositories should have lifecycle policies",
                    "severity": "Medium",
                    "description": "Automatically manage image lifecycle to control storage costs and maintain security",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create lifecycle policies to remove old images, untagged images, and limit repository size"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS ECR Cost Optimization Best Practices",
            "version": "2024",
            "controls": [
                {
                    "identifier": "COST-01",
                    "title": "Implement Lifecycle Policies",
                    "severity": "High",
                    "description": "Automatically delete old and unused container images to reduce storage costs",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure lifecycle policies to remove images older than specified days, limit number of images per repository, and delete untagged images"
                    }
                },
                {
                    "identifier": "COST-02",
                    "title": "Optimize Image Layers",
                    "severity": "High",
                    "description": "Reduce image size and storage costs through efficient layering and multi-stage builds",
                    "implementation": {
                        "type": "User",
                        "description": "Use multi-stage Docker builds, minimize layers, and remove unnecessary packages and files from container images"
                    }
                },
                {
                    "identifier": "COST-03",
                    "title": "Monitor Repository Usage",
                    "severity": "Medium",
                    "description": "Track repository usage patterns to identify cost optimization opportunities",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use CloudWatch metrics and AWS Cost Explorer to monitor ECR storage usage, data transfer costs, and repository access patterns"
                    }
                },
                {
                    "identifier": "COST-04",
                    "title": "Implement Image Deduplication",
                    "severity": "Medium",
                    "description": "Reduce storage costs by avoiding duplicate image layers across repositories",
                    "implementation": {
                        "type": "User",
                        "description": "Use common base images across applications and implement consistent tagging strategies to maximize layer sharing"
                    }
                },
                {
                    "identifier": "COST-05",
                    "title": "Regular Repository Cleanup",
                    "severity": "Medium",
                    "description": "Periodically review and clean up unused repositories and images",
                    "implementation": {
                        "type": "User",
                        "description": "Establish processes to regularly audit ECR repositories, remove unused repositories, and clean up test/development images"
                    }
                },
                {
                    "identifier": "COST-06",
                    "title": "Optimize Data Transfer",
                    "severity": "Low",
                    "description": "Minimize data transfer costs by using ECR in the same region as compute resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Deploy ECR repositories in the same AWS region as ECS, EKS, or EC2 instances to avoid cross-region data transfer charges"
                    }
                }
            ]
        }
    ]
}