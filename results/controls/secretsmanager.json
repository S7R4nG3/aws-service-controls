{
    "service": "AWS Secrets Manager",
    "security": [
        {
            "name": "CSA CCM",
            "version": "v5.0",
            "controls": [
                {
                    "identifier": "IAM-02",
                    "title": "User Access Management",
                    "severity": "Critical",
                    "description": "Ensure proper identity and access management for users accessing secrets",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement least privilege IAM policies using resource-based policies and condition keys for Secrets Manager access"
                    }
                },
                {
                    "identifier": "EKM-01",
                    "title": "Entitlement Establishment",
                    "severity": "High",
                    "description": "Establish proper entitlements for secret access based on roles and responsibilities",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create role-based IAM policies with specific secret ARN restrictions and condition-based access controls"
                    }
                },
                {
                    "identifier": "DSI-07",
                    "title": "Encryption and Key Management",
                    "severity": "High",
                    "description": "Ensure proper encryption of secrets at rest and in transit",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure AWS KMS customer-managed keys for secrets encryption and enable encryption in transit using TLS"
                    }
                },
                {
                    "identifier": "IVS-06",
                    "title": "Network Monitoring",
                    "severity": "Medium",
                    "description": "Monitor network access to secrets management service",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable VPC Flow Logs and configure CloudTrail for API call monitoring"
                    }
                }
            ]
        },
        {
            "name": "NIST 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-2",
                    "title": "Account Management",
                    "severity": "Critical",
                    "description": "Manage user accounts with access to secrets",
                    "implementation": {
                        "type": "User",
                        "description": "Implement centralized account management using AWS IAM with regular access reviews and automated provisioning/deprovisioning"
                    }
                },
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "Critical",
                    "description": "Enforce approved authorizations for accessing secrets",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure resource-based policies and IAM policies with explicit deny statements and condition keys"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "High",
                    "description": "Protect confidentiality and integrity of transmitted secrets",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use HTTPS/TLS for all API communications and implement VPC endpoints for private connectivity"
                    }
                },
                {
                    "identifier": "AU-3",
                    "title": "Content of Audit Records",
                    "severity": "High",
                    "description": "Generate audit records containing information for security investigations",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable CloudTrail logging with detailed event information including source IP, user identity, and timestamps"
                    }
                },
                {
                    "identifier": "CP-9",
                    "title": "Information System Backup",
                    "severity": "Medium",
                    "description": "Conduct backups of secrets and recovery information",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure cross-region secret replication and implement backup strategies using AWS Backup"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Best Practices",
            "version": "v1.0.0",
            "controls": [
                {
                    "identifier": "SecretsManager.1",
                    "title": "Secrets Manager secrets should have automatic rotation enabled",
                    "severity": "Critical",
                    "description": "Ensure secrets are automatically rotated to reduce security risks",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure automatic rotation using Lambda functions and specify rotation schedules in CloudFormation/Terraform"
                    }
                },
                {
                    "identifier": "SecretsManager.2",
                    "title": "Secrets Manager secrets configured with automatic rotation should rotate successfully",
                    "severity": "High",
                    "description": "Verify that configured automatic rotation completes successfully",
                    "implementation": {
                        "type": "User",
                        "description": "Monitor rotation status through CloudWatch metrics and set up alerts for failed rotations"
                    }
                },
                {
                    "identifier": "SecretsManager.3",
                    "title": "Remove unused Secrets Manager secrets",
                    "severity": "Medium",
                    "description": "Identify and remove secrets that are no longer in use",
                    "implementation": {
                        "type": "User",
                        "description": "Implement regular auditing using AWS Config rules and CloudTrail analysis to identify unused secrets"
                    }
                },
                {
                    "identifier": "SecretsManager.4",
                    "title": "Secrets Manager secrets should be rotated within a specified number of days",
                    "severity": "Medium",
                    "description": "Ensure secrets are rotated within organization-defined timeframes",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure rotation schedules and monitoring using AWS Config rules and CloudWatch alarms"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "2023.1.0",
            "controls": [
                {
                    "identifier": "SecretsManager.1",
                    "title": "Secrets Manager secrets should have automatic rotation enabled",
                    "severity": "Critical",
                    "description": "Automatically rotate secrets to maintain security posture",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable automatic rotation in secret configuration with appropriate Lambda rotation functions"
                    }
                },
                {
                    "identifier": "IAM.1",
                    "title": "IAM policies should not allow full '*' administrative privileges",
                    "severity": "Critical",
                    "description": "Restrict overly permissive policies for Secrets Manager access",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create specific IAM policies with explicit resource ARNs and required actions only"
                    }
                },
                {
                    "identifier": "CloudTrail.1",
                    "title": "CloudTrail should be enabled and configured with at least one multi-Region trail",
                    "severity": "High",
                    "description": "Enable comprehensive logging for Secrets Manager API calls",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure multi-region CloudTrail with S3 bucket logging and log file validation"
                    }
                },
                {
                    "identifier": "KMS.1",
                    "title": "IAM customer managed policies should not allow decryption actions on all KMS keys",
                    "severity": "High",
                    "description": "Restrict KMS key access for secret decryption",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement specific KMS key policies with resource-level permissions for secret encryption keys"
                    }
                },
                {
                    "identifier": "Config.1",
                    "title": "AWS Config should be enabled",
                    "severity": "Medium",
                    "description": "Monitor configuration changes to Secrets Manager resources",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable AWS Config with Secrets Manager resource recording and compliance rules"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS Secrets Manager Cost Optimization",
            "version": "2024",
            "controls": [
                {
                    "identifier": "COST-01",
                    "title": "Remove Unused Secrets",
                    "severity": "High",
                    "description": "Regularly identify and delete secrets that are no longer in use to avoid ongoing charges",
                    "implementation": {
                        "type": "User",
                        "description": "Implement automated discovery using CloudTrail logs to identify secrets not accessed within defined timeframes and schedule for deletion"
                    }
                },
                {
                    "identifier": "COST-02",
                    "title": "Optimize Rotation Frequency",
                    "severity": "High",
                    "description": "Balance security requirements with cost by optimizing rotation schedules",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure rotation schedules based on risk assessment rather than default frequencies, using longer intervals where security permits"
                    }
                },
                {
                    "identifier": "COST-03",
                    "title": "Consolidate Secrets",
                    "severity": "Medium",
                    "description": "Combine related secrets into single secret entries where security boundaries allow",
                    "implementation": {
                        "type": "User",
                        "description": "Review secret architecture to identify opportunities for consolidation, such as storing multiple database credentials in JSON format"
                    }
                },
                {
                    "identifier": "COST-04",
                    "title": "Monitor Secret Usage",
                    "severity": "Medium",
                    "description": "Implement monitoring to track secret usage patterns and identify cost optimization opportunities",
                    "implementation": {
                        "type": "Platform",
                        "description": "Set up CloudWatch dashboards and Cost Explorer analysis to track Secrets Manager spending and usage metrics"
                    }
                },
                {
                    "identifier": "COST-05",
                    "title": "Use Appropriate Replication Strategy",
                    "severity": "Medium",
                    "description": "Implement cross-region replication only where required for disaster recovery",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure replication based on RTO/RPO requirements and avoid unnecessary cross-region replication charges"
                    }
                },
                {
                    "identifier": "COST-06",
                    "title": "Implement Secret Lifecycle Management",
                    "severity": "Low",
                    "description": "Establish processes for secret lifecycle management to prevent secret sprawl",
                    "implementation": {
                        "type": "User",
                        "description": "Create governance processes with regular reviews, automated cleanup, and approval workflows for new secrets"
                    }
                }
            ]
        }
    ]
}