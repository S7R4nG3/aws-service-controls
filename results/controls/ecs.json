{
    "service": "AWS Elastic Container Service (ECS)",
    "security": [
        {
            "name": "NIST 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-2",
                    "title": "Account Management",
                    "severity": "High",
                    "description": "Manage system accounts, group memberships, privileges, workflow, notifications, deactivations, and authorizations",
                    "implementation": {
                        "type": "Platform",
                        "description": "Implement IAM roles and policies for ECS services, tasks, and users with principle of least privilege"
                    }
                },
                {
                    "identifier": "AC-3",
                    "title": "Access Enforcement",
                    "severity": "High",
                    "description": "Enforce approved authorizations for logical access to information and system resources",
                    "implementation": {
                        "type": "IaC",
                        "description": "Define IAM policies in CloudFormation/Terraform templates that restrict ECS API access and task execution permissions"
                    }
                },
                {
                    "identifier": "SC-7",
                    "title": "Boundary Protection",
                    "severity": "High",
                    "description": "Monitor and control communications at the external boundary of the system and at key internal boundaries",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure VPC security groups, NACLs, and Application Load Balancer security groups for ECS services"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "High",
                    "description": "Protect the confidentiality and integrity of transmitted information",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable TLS encryption for ECS service communication and configure SSL/TLS certificates on load balancers"
                    }
                },
                {
                    "identifier": "AU-2",
                    "title": "Audit Events",
                    "severity": "Medium",
                    "description": "Identify the types of events that the system is capable of logging and that the organization wants logged",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable CloudTrail logging for ECS API calls and configure container insights for application logging"
                    }
                },
                {
                    "identifier": "AU-6",
                    "title": "Audit Record Review, Analysis, and Reporting",
                    "severity": "Medium",
                    "description": "Review and analyze system audit records for indications of inappropriate or unusual activity",
                    "implementation": {
                        "type": "Platform",
                        "description": "Set up CloudWatch monitoring and alerts for ECS service metrics and security events"
                    }
                },
                {
                    "identifier": "CM-2",
                    "title": "Baseline Configuration",
                    "severity": "Medium",
                    "description": "Develop, document, and maintain a current baseline configuration of the system",
                    "implementation": {
                        "type": "IaC",
                        "description": "Use standardized ECS task definitions and container images with version control and configuration management"
                    }
                },
                {
                    "identifier": "RA-5",
                    "title": "Vulnerability Monitoring and Scanning",
                    "severity": "Medium",
                    "description": "Monitor and scan for vulnerabilities in the system and hosted applications and update the vulnerability scanning activities when new vulnerabilities are identified",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable Amazon Inspector for ECS container vulnerability assessments and ECR image scanning"
                    }
                }
            ]
        },
        {
            "name": "CSA Cloud Controls Matrix",
            "version": "v4.0",
            "controls": [
                {
                    "identifier": "IAM-01",
                    "title": "Identity and Access Management Policy",
                    "severity": "High",
                    "description": "Policies and procedures shall be established for the full lifecycle of identity and access management",
                    "implementation": {
                        "type": "User",
                        "description": "Develop and implement IAM policies specific to ECS resource access and container execution roles"
                    }
                },
                {
                    "identifier": "IAM-02",
                    "title": "User Access Authorization",
                    "severity": "High",
                    "description": "User access policies and procedures shall be established and maintained for all systems and services",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure ECS task roles and execution roles with minimal required permissions for container operations"
                    }
                },
                {
                    "identifier": "DSI-01",
                    "title": "Data Security and Information Lifecycle Management",
                    "severity": "High",
                    "description": "Policies and procedures shall be established for data security and information lifecycle management",
                    "implementation": {
                        "type": "User",
                        "description": "Classify data processed by ECS containers and implement appropriate security controls based on classification"
                    }
                },
                {
                    "identifier": "EKM-01",
                    "title": "Encryption and Key Management",
                    "severity": "High",
                    "description": "Encryption and key management policies and procedures shall be established and maintained",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use AWS KMS for encrypting ECS task data, EBS volumes, and secrets management with proper key rotation"
                    }
                },
                {
                    "identifier": "LOG-01",
                    "title": "Logging and Monitoring Policy",
                    "severity": "Medium",
                    "description": "Logging and monitoring policies and procedures shall be established and maintained",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure centralized logging for ECS containers using CloudWatch Logs or third-party solutions"
                    }
                },
                {
                    "identifier": "IPY-01",
                    "title": "Network Infrastructure Protection",
                    "severity": "Medium",
                    "description": "Network security controls shall be implemented to protect the service provider network infrastructure",
                    "implementation": {
                        "type": "IaC",
                        "description": "Implement network segmentation for ECS services using VPC subnets and security groups"
                    }
                },
                {
                    "identifier": "BCR-01",
                    "title": "Business Continuity Management and Operational Resilience",
                    "severity": "Medium",
                    "description": "Business continuity and operational resilience procedures shall be established and maintained",
                    "implementation": {
                        "type": "IaC",
                        "description": "Deploy ECS services across multiple Availability Zones with appropriate auto-scaling policies"
                    }
                },
                {
                    "identifier": "STA-01",
                    "title": "Secure Software Development Lifecycle",
                    "severity": "Low",
                    "description": "Policies and procedures shall be established for secure application development and deployment",
                    "implementation": {
                        "type": "User",
                        "description": "Implement secure container image building practices and vulnerability scanning in CI/CD pipelines"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Best Practices",
            "version": "1.0.0",
            "controls": [
                {
                    "identifier": "ECS.1",
                    "title": "Amazon ECS task definitions should not share the host's process namespace",
                    "severity": "High",
                    "description": "ECS task definitions should not share the host's process namespace to maintain container isolation",
                    "implementation": {
                        "type": "IaC",
                        "description": "Set pidMode to 'task' or omit pidMode parameter in ECS task definitions to avoid sharing host process namespace"
                    }
                },
                {
                    "identifier": "ECS.2",
                    "title": "ECS services should not have public IP addresses assigned automatically",
                    "severity": "High",
                    "description": "ECS services should not automatically assign public IP addresses unless required for internet access",
                    "implementation": {
                        "type": "IaC",
                        "description": "Set assignPublicIp to 'DISABLED' in ECS service network configuration and use NAT Gateway for outbound internet access"
                    }
                },
                {
                    "identifier": "ECS.3",
                    "title": "ECS task definitions should not share the host's network namespace",
                    "severity": "High",
                    "description": "ECS task definitions should use awsvpc network mode instead of host network mode",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure networkMode to 'awsvpc' in ECS task definitions to provide network isolation"
                    }
                },
                {
                    "identifier": "ECS.4",
                    "title": "ECS containers should run as non-privileged",
                    "severity": "High",
                    "description": "ECS containers should not run with privileged access to the host",
                    "implementation": {
                        "type": "IaC",
                        "description": "Set privileged to false in container definitions and avoid running containers as root user"
                    }
                },
                {
                    "identifier": "ECS.8",
                    "title": "Secrets should not be passed as container environment variables",
                    "severity": "High",
                    "description": "ECS task definitions should use secrets manager or parameter store instead of environment variables for sensitive data",
                    "implementation": {
                        "type": "IaC",
                        "description": "Use secrets parameter in container definitions to reference AWS Secrets Manager or Systems Manager Parameter Store"
                    }
                },
                {
                    "identifier": "ECS.5",
                    "title": "ECS containers should limit memory usage",
                    "severity": "Medium",
                    "description": "ECS container definitions should specify memory limits to prevent resource exhaustion",
                    "implementation": {
                        "type": "IaC",
                        "description": "Define memory and memoryReservation parameters in ECS container definitions to limit resource usage"
                    }
                },
                {
                    "identifier": "ECS.10",
                    "title": "ECS Fargate services should run on the latest Fargate platform version",
                    "severity": "Medium",
                    "description": "ECS Fargate services should use the latest platform version for security updates",
                    "implementation": {
                        "type": "Platform",
                        "description": "Specify platformVersion as 'LATEST' or specific latest version in ECS Fargate service configuration"
                    }
                },
                {
                    "identifier": "ECS.12",
                    "title": "ECS clusters should use Container Insights",
                    "severity": "Low",
                    "description": "ECS clusters should have Container Insights enabled for monitoring and logging",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable Container Insights on ECS clusters through AWS CLI or console for enhanced monitoring capabilities"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "2024",
            "controls": [
                {
                    "identifier": "ECS.1",
                    "title": "Amazon ECS task definitions should not share the host's process namespace",
                    "severity": "High",
                    "description": "This control checks whether Amazon ECS task definitions are configured to share a host's process namespace",
                    "implementation": {
                        "type": "IaC",
                        "description": "Ensure pidMode is not set to 'host' in ECS task definitions to maintain process isolation"
                    }
                },
                {
                    "identifier": "ECS.2",
                    "title": "ECS services should not have public IP addresses assigned automatically",
                    "severity": "High",
                    "description": "This control checks whether Amazon ECS services are configured to automatically assign public IP addresses",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure ECS services with assignPublicIp set to 'DISABLED' in private subnets with NAT Gateway access"
                    }
                },
                {
                    "identifier": "ECS.4",
                    "title": "ECS containers should run as non-privileged",
                    "severity": "High",
                    "description": "This control checks if the privileged parameter in the container definition of ECS Task Definitions is set to true",
                    "implementation": {
                        "type": "IaC",
                        "description": "Set privileged to false in ECS container definitions and implement least privilege access"
                    }
                },
                {
                    "identifier": "ECS.8",
                    "title": "Secrets should not be passed as container environment variables",
                    "severity": "High",
                    "description": "This control checks whether Amazon ECS task definitions have secrets passed as environment variables",
                    "implementation": {
                        "type": "IaC",
                        "description": "Use AWS Secrets Manager or Systems Manager Parameter Store with secrets configuration instead of environment variables"
                    }
                },
                {
                    "identifier": "ECS.3",
                    "title": "ECS task definitions should not share the host's network namespace",
                    "severity": "Medium",
                    "description": "This control checks if Amazon ECS task definitions have host networking mode configured",
                    "implementation": {
                        "type": "IaC",
                        "description": "Use 'awsvpc' network mode instead of 'host' network mode in ECS task definitions"
                    }
                },
                {
                    "identifier": "ECS.5",
                    "title": "ECS containers should limit memory usage",
                    "severity": "Medium",
                    "description": "This control checks if Amazon ECS containers have memory usage limits defined",
                    "implementation": {
                        "type": "IaC",
                        "description": "Define memory limits in ECS container definitions to prevent resource exhaustion and improve stability"
                    }
                },
                {
                    "identifier": "ECS.10",
                    "title": "ECS Fargate services should run on the latest Fargate platform version",
                    "severity": "Medium",
                    "description": "This control checks if Amazon ECS Fargate services are running the latest Fargate platform version",
                    "implementation": {
                        "type": "Platform",
                        "description": "Regularly update ECS Fargate services to use the latest platform version for security patches and improvements"
                    }
                },
                {
                    "identifier": "ECS.12",
                    "title": "ECS clusters should use Container Insights",
                    "severity": "Low",
                    "description": "This control checks if ECS clusters use Container Insights",
                    "implementation": {
                        "type": "Platform",
                        "description": "Enable Container Insights on ECS clusters for comprehensive monitoring and observability"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS ECS Cost Optimization Best Practices",
            "version": "2024",
            "controls": [
                {
                    "identifier": "COST-01",
                    "title": "Right-size ECS Tasks and Services",
                    "severity": "High",
                    "description": "Optimize CPU and memory allocation for ECS tasks to avoid over-provisioning resources",
                    "implementation": {
                        "type": "Platform",
                        "description": "Monitor CloudWatch Container Insights metrics to right-size CPU and memory allocation, and use AWS Compute Optimizer recommendations"
                    }
                },
                {
                    "identifier": "COST-02",
                    "title": "Use Fargate Spot for Fault-Tolerant Workloads",
                    "severity": "High",
                    "description": "Utilize Fargate Spot pricing for cost-sensitive and fault-tolerant workloads to reduce compute costs by up to 70%",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure ECS services with capacityProviders including FARGATE_SPOT with appropriate capacity provider strategies"
                    }
                },
                {
                    "identifier": "COST-03",
                    "title": "Implement Auto Scaling",
                    "severity": "High",
                    "description": "Configure ECS service auto scaling and cluster auto scaling to match resource demand dynamically",
                    "implementation": {
                        "type": "IaC",
                        "description": "Set up Application Auto Scaling policies for ECS services based on CPU, memory, or custom metrics to scale automatically"
                    }
                },
                {
                    "identifier": "COST-04",
                    "title": "Use EC2 Spot Instances for ECS Clusters",
                    "severity": "Medium",
                    "description": "Leverage EC2 Spot Instances in ECS clusters for significant cost savings on fault-tolerant workloads",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure ECS Capacity Providers with EC2 Auto Scaling Groups using Spot Instances and mixed instance types"
                    }
                },
                {
                    "identifier": "COST-05",
                    "title": "Optimize Container Images",
                    "severity": "Medium",
                    "description": "Minimize container image sizes to reduce storage costs and improve deployment times",
                    "implementation": {
                        "type": "User",
                        "description": "Use multi-stage Docker builds, minimal base images, and remove unnecessary packages to reduce image size and ECR storage costs"
                    }
                },
                {
                    "identifier": "COST-06",
                    "title": "Implement Resource-Based Scheduling",
                    "severity": "Medium",
                    "description": "Use task placement strategies to optimize resource utilization across ECS container instances",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure placement strategies like 'binpack' to maximize resource utilization and reduce the number of required instances"
                    }
                },
                {
                    "identifier": "COST-07",
                    "title": "Monitor and Optimize Data Transfer Costs",
                    "severity": "Medium",
                    "description": "Minimize data transfer costs by optimizing network architecture and data flow patterns",
                    "implementation": {
                        "type": "IaC",
                        "description": "Deploy ECS services in same AZ when possible, use VPC endpoints for AWS services, and implement data locality strategies"
                    }
                },
                {
                    "identifier": "COST-08",
                    "title": "Use Reserved Capacity for Predictable Workloads",
                    "severity": "Low",
                    "description": "Purchase EC2 Reserved Instances or Savings Plans for predictable ECS workloads running on EC2 launch type",
                    "implementation": {
                        "type": "Platform",
                        "description": "Analyze usage patterns and purchase Reserved Instances or Compute Savings Plans for consistent ECS workloads on EC2"
                    }
                }
            ]
        }
    ]
}