{
    "service": "AWS DynamoDB",
    "security": [
        {
            "name": "CSA Cloud Controls Matrix",
            "version": "v4.0.10",
            "controls": [
                {
                    "identifier": "IAM-01",
                    "title": "Entitlement",
                    "severity": "Critical",
                    "description": "Policies and procedures shall be established to govern the entitlement or access rights granted to customer/tenant access to data and functions within the cloud service",
                    "implementation": {
                        "type": "Platform",
                        "description": "Implement IAM policies with least privilege access, use IAM roles for applications, and enforce MFA for administrative access"
                    }
                },
                {
                    "identifier": "EKM-02",
                    "title": "Key Generation",
                    "severity": "Critical",
                    "description": "Encryption keys shall be generated using approved algorithms and key sizes as defined in recognized standards",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure DynamoDB encryption at rest using AWS KMS keys, implement customer-managed keys for sensitive data"
                    }
                },
                {
                    "identifier": "AIS-01",
                    "title": "Anti-Virus / Malicious Software",
                    "severity": "High",
                    "description": "Comprehensive logging and monitoring for security events and malicious activities",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable AWS CloudTrail for API logging, configure DynamoDB Streams for data change monitoring"
                    }
                },
                {
                    "identifier": "DSI-01",
                    "title": "Classification",
                    "severity": "High",
                    "description": "Data and objects containing data shall be assigned a classification by the data owner based on data type, jurisdiction, applicable regulation and sensitivity",
                    "implementation": {
                        "type": "User",
                        "description": "Classify DynamoDB data based on sensitivity, implement data retention policies using TTL features"
                    }
                },
                {
                    "identifier": "IVS-01",
                    "title": "Baseline Requirements",
                    "severity": "Medium",
                    "description": "Baseline security requirements shall be applied to networks based on their classification and taking into account zone concept implementations",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure VPC endpoints for private access, implement security groups and NACLs"
                    }
                }
            ]
        },
        {
            "name": "NIST 800-53",
            "version": "Rev 5",
            "controls": [
                {
                    "identifier": "AC-2",
                    "title": "Account Management",
                    "severity": "Critical",
                    "description": "Manage DynamoDB access accounts and credentials with proper lifecycle management",
                    "implementation": {
                        "type": "Platform",
                        "description": "Use IAM service accounts and roles, implement automated account provisioning and deprovisioning"
                    }
                },
                {
                    "identifier": "SC-8",
                    "title": "Transmission Confidentiality and Integrity",
                    "severity": "Critical",
                    "description": "Protect data transmission to and from DynamoDB using encryption",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enforce HTTPS/TLS 1.2+ for all DynamoDB connections, configure SDK with SSL/TLS settings"
                    }
                },
                {
                    "identifier": "SC-28",
                    "title": "Protection of Information at Rest",
                    "severity": "Critical",
                    "description": "Encrypt sensitive data stored in DynamoDB tables",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable DynamoDB encryption at rest using AWS managed or customer managed KMS keys"
                    }
                },
                {
                    "identifier": "AU-2",
                    "title": "Event Logging",
                    "severity": "High",
                    "description": "Generate audit logs for all DynamoDB operations and access attempts",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure CloudTrail data events for DynamoDB, enable VPC Flow Logs for network monitoring"
                    }
                },
                {
                    "identifier": "CP-9",
                    "title": "Information System Backup",
                    "severity": "High",
                    "description": "Implement backup and recovery procedures for DynamoDB data",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable DynamoDB point-in-time recovery, configure automated backups and cross-region replication"
                    }
                },
                {
                    "identifier": "SI-4",
                    "title": "Information System Monitoring",
                    "severity": "Medium",
                    "description": "Monitor DynamoDB for unauthorized access and anomalous activity",
                    "implementation": {
                        "type": "Platform",
                        "description": "Configure CloudWatch alarms for DynamoDB metrics, implement GuardDuty for threat detection"
                    }
                }
            ]
        },
        {
            "name": "AWS Foundational Security Best Practices",
            "version": "1.0.0",
            "controls": [
                {
                    "identifier": "DynamoDB.1",
                    "title": "DynamoDB tables should automatically scale capacity with demand",
                    "severity": "Medium",
                    "description": "Configure DynamoDB tables with on-demand billing or auto-scaling to handle traffic spikes securely",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable DynamoDB on-demand billing mode or configure auto-scaling for provisioned capacity"
                    }
                },
                {
                    "identifier": "DynamoDB.2",
                    "title": "DynamoDB tables should have point-in-time recovery enabled",
                    "severity": "Medium",
                    "description": "Enable point-in-time recovery to protect against accidental data loss or corruption",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable point-in-time recovery on all DynamoDB tables containing critical business data"
                    }
                },
                {
                    "identifier": "DynamoDB.3",
                    "title": "DynamoDB Accelerator (DAX) clusters should be encrypted at rest",
                    "severity": "Medium",
                    "description": "Encrypt DAX clusters to protect cached data at rest",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure DAX clusters with encryption at rest using AWS managed keys"
                    }
                },
                {
                    "identifier": "DynamoDB.4",
                    "title": "DynamoDB tables should be present in a backup plan",
                    "severity": "Low",
                    "description": "Include DynamoDB tables in AWS Backup plans for centralized backup management",
                    "implementation": {
                        "type": "IaC",
                        "description": "Create AWS Backup plans that include DynamoDB tables with appropriate retention policies"
                    }
                }
            ]
        },
        {
            "name": "AWS Security Hub",
            "version": "2023.04",
            "controls": [
                {
                    "identifier": "DynamoDB.1",
                    "title": "DynamoDB tables should automatically scale capacity with demand",
                    "severity": "Medium",
                    "description": "Ensure DynamoDB tables can handle unexpected load without service disruption",
                    "implementation": {
                        "type": "IaC",
                        "description": "Configure auto-scaling policies or use on-demand billing mode for DynamoDB tables"
                    }
                },
                {
                    "identifier": "DynamoDB.2",
                    "title": "DynamoDB tables should have point-in-time recovery enabled",
                    "severity": "Medium",
                    "description": "Enable continuous backups to recover from data corruption or accidental deletion",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable PITR on production DynamoDB tables and configure appropriate retention periods"
                    }
                },
                {
                    "identifier": "DynamoDB.3",
                    "title": "DynamoDB Accelerator clusters should be encrypted at rest",
                    "severity": "Medium",
                    "description": "Protect sensitive data cached in DAX clusters through encryption",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable server-side encryption for DAX clusters using AWS KMS keys"
                    }
                },
                {
                    "identifier": "DynamoDB.6",
                    "title": "DynamoDB tables should have deletion protection enabled",
                    "severity": "Low",
                    "description": "Prevent accidental deletion of critical DynamoDB tables",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable deletion protection on production DynamoDB tables through table configuration"
                    }
                }
            ]
        }
    ],
    "operational": [],
    "cost": [
        {
            "name": "AWS DynamoDB Cost Optimization Best Practices",
            "version": "2023",
            "controls": [
                {
                    "identifier": "COST-001",
                    "title": "Choose Appropriate Billing Mode",
                    "severity": "High",
                    "description": "Select the most cost-effective billing mode based on traffic patterns",
                    "implementation": {
                        "type": "IaC",
                        "description": "Analyze traffic patterns and choose between on-demand and provisioned capacity modes, switch to on-demand for unpredictable workloads"
                    }
                },
                {
                    "identifier": "COST-002",
                    "title": "Implement Data Lifecycle Management",
                    "severity": "High",
                    "description": "Use TTL to automatically delete expired data and reduce storage costs",
                    "implementation": {
                        "type": "User",
                        "description": "Configure Time To Live (TTL) attributes on DynamoDB items to automatically expire and delete old data"
                    }
                },
                {
                    "identifier": "COST-003",
                    "title": "Optimize Table Design for Cost Efficiency",
                    "severity": "High",
                    "description": "Design tables with efficient partition keys and minimal secondary indexes",
                    "implementation": {
                        "type": "User",
                        "description": "Use composite partition keys for even data distribution, minimize Global Secondary Indexes, and avoid hot partitions"
                    }
                },
                {
                    "identifier": "COST-004",
                    "title": "Enable Auto Scaling",
                    "severity": "Medium",
                    "description": "Configure auto-scaling to automatically adjust capacity based on demand",
                    "implementation": {
                        "type": "IaC",
                        "description": "Enable DynamoDB auto-scaling with appropriate target utilization percentages and scaling policies"
                    }
                },
                {
                    "identifier": "COST-005",
                    "title": "Monitor and Optimize Reserved Capacity",
                    "severity": "Medium",
                    "description": "Purchase reserved capacity for predictable workloads to reduce costs",
                    "implementation": {
                        "type": "Platform",
                        "description": "Analyze usage patterns and purchase DynamoDB reserved capacity for consistent workloads to achieve up to 76% cost savings"
                    }
                },
                {
                    "identifier": "COST-006",
                    "title": "Implement Efficient Query Patterns",
                    "severity": "Medium",
                    "description": "Use efficient query and scan operations to minimize consumed capacity units",
                    "implementation": {
                        "type": "User",
                        "description": "Use Query instead of Scan operations, implement pagination, use projection expressions to limit returned attributes"
                    }
                },
                {
                    "identifier": "COST-007",
                    "title": "Archive Cold Data",
                    "severity": "Medium",
                    "description": "Move infrequently accessed data to more cost-effective storage solutions",
                    "implementation": {
                        "type": "User",
                        "description": "Export old data to S3 using DynamoDB export features, implement data archiving strategies for cold data"
                    }
                },
                {
                    "identifier": "COST-008",
                    "title": "Monitor Cost and Usage",
                    "severity": "Low",
                    "description": "Implement comprehensive cost monitoring and alerting for DynamoDB usage",
                    "implementation": {
                        "type": "Platform",
                        "description": "Set up CloudWatch billing alarms, use AWS Cost Explorer to analyze DynamoDB costs, implement cost allocation tags"
                    }
                }
            ]
        }
    ]
}